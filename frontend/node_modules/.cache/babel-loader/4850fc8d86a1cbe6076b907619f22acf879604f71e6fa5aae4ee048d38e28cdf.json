{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\nlet socket = null;\nlet stompClient = null;\nlet isConnected = false;\nlet prefixUrl = '';\nconst disconnect = () => {\n  if (stompClient) {\n    stompClient.disconnect();\n  }\n  socket = null;\n  stompClient = null;\n  prefixUrl = '';\n  isConnected = false;\n};\nconst connect = async () => {\n  if (isConnected) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve, reject) => {\n    socket = new SockJS(window.location.origin + process.env.VUE_APP_HTTP_PATH + '/ws', [], {});\n    stompClient = Stomp.over(socket);\n    if (process.env.NODE_ENV !== 'development') {\n      stompClient.debug = () => {};\n    }\n    stompClient.connect({\n      Cookie: document.cookie\n    }, () => {\n      prefixUrl = `/user/`;\n      isConnected = true;\n      resolve();\n    }, err => {\n      disconnect();\n      reject(err);\n    });\n  });\n};\nconst subscribe = (subscription, callback) => {\n  if (!isConnected) {\n    return;\n  }\n  waitForSocketConnection(stompClient.ws, function () {\n    return stompClient.subscribe(prefixUrl + subscription, response => {\n      if (typeof callback !== 'function') {\n        return;\n      }\n      callback(response.body);\n    });\n  });\n};\nfunction waitForSocketConnection(socket, callback) {\n  setTimeout(function () {\n    if (socket.readyState === 1) {\n      if (callback != null) {\n        callback();\n      }\n    } else {\n      waitForSocketConnection(socket, callback);\n    }\n  }, 5);\n}\nexport { connect, disconnect, subscribe };","map":{"version":3,"names":["SockJS","Stomp","socket","stompClient","isConnected","prefixUrl","disconnect","connect","Promise","resolve","reject","window","location","origin","process","env","VUE_APP_HTTP_PATH","over","NODE_ENV","debug","Cookie","document","cookie","err","subscribe","subscription","callback","waitForSocketConnection","ws","response","body","setTimeout","readyState"],"sources":["C:/app/137-tech/radio-web/radio-web/frontend/src/utils/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\n\nlet socket = null;\nlet stompClient = null;\nlet isConnected = false;\nlet prefixUrl = '';\n\nconst disconnect = () => {\n    if (stompClient) {\n        stompClient.disconnect();\n    }\n    socket = null;\n    stompClient = null;\n    prefixUrl = '';\n    isConnected = false;\n};\n\nconst connect = async () => {\n    if (isConnected) {\n        return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n        socket = new SockJS(\n            window.location.origin + process.env.VUE_APP_HTTP_PATH + '/ws',\n            [],\n            {}\n        );\n        stompClient = Stomp.over(socket);\n\n        if (process.env.NODE_ENV !== 'development') {\n            stompClient.debug = () => {};\n        }\n\n        stompClient.connect(\n            {\n                Cookie: document.cookie\n            },\n            () => {\n                prefixUrl = `/user/`;\n                isConnected = true;\n                resolve();\n            },\n            err => {\n                disconnect();\n                reject(err);\n            }\n        );\n    });\n};\n\nconst subscribe = (subscription, callback) => {\n    if (!isConnected) {\n        return;\n    }\n\n    waitForSocketConnection(stompClient.ws, function () {\n        return stompClient.subscribe(prefixUrl + subscription, response => {\n            if (typeof callback !== 'function') {\n                return;\n            }\n\n            callback(response.body);\n        });\n    });\n};\n\nfunction waitForSocketConnection(socket, callback) {\n    setTimeout(function () {\n        if (socket.readyState === 1) {\n            if (callback != null) {\n                callback();\n            }\n        } else {\n            waitForSocketConnection(socket, callback);\n        }\n    }, 5);\n}\n\nexport { connect, disconnect, subscribe };\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,IAAIC,MAAM,GAAG,IAAI;AACjB,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,WAAW,GAAG,KAAK;AACvB,IAAIC,SAAS,GAAG,EAAE;AAElB,MAAMC,UAAU,GAAG,MAAM;EACrB,IAAIH,WAAW,EAAE;IACbA,WAAW,CAACG,UAAU,EAAE;EAC5B;EACAJ,MAAM,GAAG,IAAI;EACbC,WAAW,GAAG,IAAI;EAClBE,SAAS,GAAG,EAAE;EACdD,WAAW,GAAG,KAAK;AACvB,CAAC;AAED,MAAMG,OAAO,GAAG,YAAY;EACxB,IAAIH,WAAW,EAAE;IACb,OAAOI,OAAO,CAACC,OAAO,EAAE;EAC5B;EAEA,OAAO,IAAID,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCR,MAAM,GAAG,IAAIF,MAAM,CACfW,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,KAAK,EAC9D,EAAE,EACF,CAAC,CAAC,CACL;IACDb,WAAW,GAAGF,KAAK,CAACgB,IAAI,CAACf,MAAM,CAAC;IAEhC,IAAIY,OAAO,CAACC,GAAG,CAACG,QAAQ,KAAK,aAAa,EAAE;MACxCf,WAAW,CAACgB,KAAK,GAAG,MAAM,CAAC,CAAC;IAChC;IAEAhB,WAAW,CAACI,OAAO,CACf;MACIa,MAAM,EAAEC,QAAQ,CAACC;IACrB,CAAC,EACD,MAAM;MACFjB,SAAS,GAAI,QAAO;MACpBD,WAAW,GAAG,IAAI;MAClBK,OAAO,EAAE;IACb,CAAC,EACDc,GAAG,IAAI;MACHjB,UAAU,EAAE;MACZI,MAAM,CAACa,GAAG,CAAC;IACf,CAAC,CACJ;EACL,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,SAAS,GAAG,CAACC,YAAY,EAAEC,QAAQ,KAAK;EAC1C,IAAI,CAACtB,WAAW,EAAE;IACd;EACJ;EAEAuB,uBAAuB,CAACxB,WAAW,CAACyB,EAAE,EAAE,YAAY;IAChD,OAAOzB,WAAW,CAACqB,SAAS,CAACnB,SAAS,GAAGoB,YAAY,EAAEI,QAAQ,IAAI;MAC/D,IAAI,OAAOH,QAAQ,KAAK,UAAU,EAAE;QAChC;MACJ;MAEAA,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AAED,SAASH,uBAAuB,CAACzB,MAAM,EAAEwB,QAAQ,EAAE;EAC/CK,UAAU,CAAC,YAAY;IACnB,IAAI7B,MAAM,CAAC8B,UAAU,KAAK,CAAC,EAAE;MACzB,IAAIN,QAAQ,IAAI,IAAI,EAAE;QAClBA,QAAQ,EAAE;MACd;IACJ,CAAC,MAAM;MACHC,uBAAuB,CAACzB,MAAM,EAAEwB,QAAQ,CAAC;IAC7C;EACJ,CAAC,EAAE,CAAC,CAAC;AACT;AAEA,SAASnB,OAAO,EAAED,UAAU,EAAEkB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}