{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9b74bc18\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Visualização do Produto\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"produto\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"descricao\"\n};\nconst _hoisted_6 = {\n  class: \"valor\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: 'data:image/jpeg;base64,' + $data.produto.imagem,\n    alt: \"Imagem do Produto\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.produto.descricaoProduto), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, \"R$ \" + _toDisplayString($data.produto.valorProduto), 1 /* TEXT */)])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAC1BC,oBAAgC,YAA5B,yBAAuB;;EACpBD,KAAK,EAAC;AAAS;;;EAETA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAO;;uBAL5BE,oBAQM,OARNC,UAQM,GAPJC,UAAgC,EAC9BH,oBAIM,OAJNI,UAIM,GAHAJ,oBAA+E;IAAzEK,GAAG,8BAA8BC,aAAO,CAACC,MAAM;IAAEC,GAAG,EAAC;uCAC3DR,oBAA2D,OAA3DS,UAA2D,mBAAjCH,aAAO,CAACI,gBAAgB,kBAClDV,oBAAsD,OAAtDW,UAAsD,EAAnC,KAAG,oBAAGL,aAAO,CAACM,YAAY","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","src","$data","imagem","alt","_hoisted_5","descricaoProduto","_hoisted_6","valorProduto"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\views\\ProdutoView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>Visualização do Produto</h2>\r\n      <div class=\"produto\">\r\n            <img :src=\"'data:image/jpeg;base64,' + produto.imagem\" alt=\"Imagem do Produto\">\r\n            <div class=\"descricao\">{{ produto.descricaoProduto }}</div>\r\n            <div class=\"valor\">R$ {{ produto.valorProduto }}</div>\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getVisualizacaoProduto} from '@/services/ComprarService.js';\r\n\r\nexport default {\r\n  name: 'produto-visualizar',\r\n  components: {\r\n  },\r\n  data() {\r\n        return {\r\n            nomeProduto: null,\r\n            valorProduto: null,\r\n            idProduto: 0,\r\n            produto: {},\r\n            statusEmpresa: [],\r\n            totalContratosOriginacao: {\r\n                totalContratosOriginacao: null,\r\n                totalImoveis: null,\r\n                totalVolumeEstimado: null,\r\n                totalVolumeEntregue: null\r\n            },\r\n            contratosTabela: [],\r\n            paginacao: {},\r\n            params: {\r\n                page: 0,\r\n                size: 20,\r\n                sort: 'statusSubEmpresa',\r\n                por: 'desc'\r\n            },\r\n            filtro: {\r\n                numeroContrato: '',\r\n                idsCultura: [],\r\n                idsSafra: [],\r\n                codigosStatus: [],\r\n                dataContrato: ''\r\n            },\r\n            skeletonBlocoInforDados: true,\r\n            CheckListagemContratoErro: false,\r\n            selectedFile: null,\r\n            imageUrl: null\r\n        };\r\n    },\r\n    methods: {\r\n      filtrarProdutosView() {\r\n        getVisualizacaoProduto(this.idProduto)\r\n            .then(response => {\r\n                console.log('Resposta do serviço:', response); // Verifica a resposta completa\r\n\r\n                if (response) {\r\n                    this.produto = response;\r\n                    console.log('Produtos:', this.produto); // Verifica se os produtos foram atribuídos corretamente\r\n                } else {\r\n                    console.error('Resposta do serviço não possui dados esperados.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao filtrar produtos:', error);\r\n            });\r\n        },\r\n\r\n      handleFileInputChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.imageUrl = URL.createObjectURL(this.selectedFile);\r\n      },\r\n\r\n      // Função para enviar a imagem para o backend\r\n      enviarImagemParaBackend(selectedFile, produto){\r\n          // Cria um objeto FormData\r\n          let formData = new FormData();\r\n          // Adiciona a imagem ao objeto FormData\r\n          formData.append('imagem', selectedFile);\r\n\r\n          enviarImagem(formData, produto.id).then(response => {\r\n              console.log('Imagem enviada com sucesso para o backend:', response);\r\n              // Faça algo com a resposta, se necessário\r\n          })\r\n          .catch(error => {\r\n              console.error('Erro ao enviar imagem para o backend:', error);\r\n              // Faça algo com o erro, se necessário\r\n          });\r\n      },\r\n\r\n      uploadImage() {\r\n        if (!this.selectedFile) {\r\n          alert('Por favor, selecione um arquivo.');\r\n          return;\r\n        }\r\n    }\r\n  },\r\n  mounted(){\r\n    this.idProduto = this.$route.params.idProduto;\r\n    console.log('idProduto:', this.idProduto);\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.login-container {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.login-error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n.produtos {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n}\r\n\r\n.produto {\r\n    width: 200px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    text-align: center;\r\n}\r\n\r\n.produto img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.produto .descricao {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.produto .valor {\r\n    color: green;\r\n    font-size: 1.2em;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}