{"ast":null,"code":"import { connect, subscribe, disconnect } from '@/utils/websocket';\nexport default {\n  name: 'programacao',\n  components: {},\n  data() {},\n  mounted() {\n    this.conectarCanalNotificacao();\n  },\n  beforeDestroy() {\n    disconnect();\n  },\n  methods: {\n    async conectarCanalNotificacao() {\n      console.log('Tentativa conexao.');\n      try {\n        await connect();\n        console.log('conectou com sucesso.');\n      } catch (error) {\n        this.$notify.error({\n          message: 'Não foi possível se conectar na api!'\n        });\n        console.log('Falha ao conectar');\n        return;\n      }\n      try {\n        subscribe('testeUsuario/websocket/teste', response => {\n          const testeRetorno = JSON.parse(response);\n          console.log('retorno é:', testeRetorno);\n        });\n      } catch (error) {\n        this.$notify.error({\n          message: 'Não foi possível subscribe no ws!'\n        });\n        console.log('Erro ao subscribe WS');\n        disconnect();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,OAAO,EAAEC,SAAS,EAAEC,UAAS,QAAS,mBAAmB;AAClE,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE,CACZ,CAAC;EAEDC,IAAI,GAAE,CAGN,CAAC;EACDC,OAAO,GAAE;IACP,IAAI,CAACC,wBAAwB,EAAE;EACjC,CAAC;EACDC,aAAa,GAAE;IACbN,UAAU,EAAE;EACd,CAAC;EAEDO,OAAO,EAAC;IAEN,MAAMF,wBAAwB,GAAE;MAC9BG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,IAAI;QACF,MAAMX,OAAO,EAAE;QACfU,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC;UACjBE,OAAO,EAAE;QACX,CAAC,CAAC;QACFJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC;MACF;MAEA,IAAI;QACIV,SAAS,CAAC,8BAA8B,EAAGc,QAAQ,IAAK;UACxD,MAAMC,YAAW,GAAIC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC;UACzCL,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEK,YAAY,CAAC;QAC3C,CAAC,CAAC;MACN,EAAE,OAAOJ,KAAK,EAAE;QACd,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC;UACfE,OAAO,EAAE;QACb,CAAC,CAAC;QACFJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCT,UAAU,EAAE;MACd;IACF;EAIF;AAGF","names":["connect","subscribe","disconnect","name","components","data","mounted","conectarCanalNotificacao","beforeDestroy","methods","console","log","error","$notify","message","response","testeRetorno","JSON","parse"],"sourceRoot":"","sources":["C:\\app\\137-tech\\radio-web\\radio-web\\frontend\\src\\views\\Programacao.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main-container\">\r\n      <h1>Programação:</h1>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { connect, subscribe, disconnect } from '@/utils/websocket';\r\nexport default {\r\n  name: 'programacao',\r\n  components: {\r\n  },\r\n\r\n  data(){\r\n\r\n\r\n  },\r\n  mounted(){\r\n    this.conectarCanalNotificacao();\r\n  },\r\n  beforeDestroy(){\r\n    disconnect();\r\n  },\r\n  \r\n  methods:{\r\n\r\n    async conectarCanalNotificacao(){\r\n      console.log('Tentativa conexao.');  \r\n      try {\r\n        await connect();      \r\n        console.log('conectou com sucesso.');  \r\n      } catch (error) {\r\n        this.$notify.error({\r\n          message: 'Não foi possível se conectar na api!'\r\n        });\r\n        console.log('Falha ao conectar');  \r\n        return;\r\n      }\r\n\r\n      try {\r\n              subscribe('testeUsuario/websocket/teste', (response) => {\r\n              const testeRetorno = JSON.parse(response);\r\n              console.log('retorno é:', testeRetorno);\r\n          });\r\n      } catch (error) {\r\n        this.$notify.error({\r\n            message: 'Não foi possível subscribe no ws!'\r\n        });\r\n        console.log('Erro ao subscribe WS');  \r\n        disconnect();\r\n      }\r\n    },\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}