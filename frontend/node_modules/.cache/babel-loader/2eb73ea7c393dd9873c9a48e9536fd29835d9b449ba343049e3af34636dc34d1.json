{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { anunciar, enviarImagem } from '@/services/AnunciarService.js';\nimport { getPerfilLogado } from '@/services/login.js';\nimport Navbar from '@/components/Navbar.vue';\nexport default {\n  name: 'CadastrarProdutoView',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      nomeProduto: null,\n      descricaoProduto: null,\n      valorProduto: null,\n      paginacao: {},\n      params: {\n        page: 0,\n        size: 20,\n        sort: 'statusSubEmpresa',\n        por: 'desc'\n      },\n      selectedFile: null,\n      imageUrl: null,\n      logo_src: \"/img/logo.png\",\n      app_name: \"Fast - Ecommerce\",\n      tipoPerfilLogado: \"\",\n      idUsuarioLogado: 0,\n      usuario: null\n    };\n  },\n  methods: {\n    cadastrar() {\n      const modal = {\n        \"nomeProduto\": this.nomeProduto,\n        \"descricaoProduto\": this.descricaoProduto,\n        \"valorProduto\": this.valorProduto,\n        \"idUsuario\": this.idUsuarioLogado\n      };\n      anunciar(modal).then(response => {\n        const produto = response;\n        this.enviarImagemParaBackend(this.selectedFile, produto);\n        this.exibirSucesso();\n      }).catch(error => {\n        console.error('Erro ao processar a requisição:', error);\n      });\n    },\n    handleFileInputChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imageUrl = URL.createObjectURL(this.selectedFile);\n    },\n    // Função para enviar a imagem para o backend\n    enviarImagemParaBackend(selectedFile, produto) {\n      // Cria um objeto FormData\n      let formData = new FormData();\n      // Adiciona a imagem ao objeto FormData\n      formData.append('imagem', selectedFile);\n      enviarImagem(formData, produto.id).then(response => {\n        // Faça algo com a resposta, se necessário\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n      });\n    },\n    uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecione um arquivo.');\n        return;\n      }\n    },\n    getPerfilLogado() {\n      getPerfilLogado(this.idUsuarioLogado).then(response => {\n        this.tipoPerfilLogado = response;\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n      });\n    },\n    exibirSucesso() {\n      // Lógica para realizar a operação\n      // Após a operação bem-sucedida, definir sucesso como true para exibir a mensagem\n      this.sucesso = true;\n\n      // Defina um timeout para esconder a mensagem após alguns segundos (opcional)\n      setTimeout(() => {\n        this.sucesso = false;\n      }, 3000); // Esconde após 3 segundos\n    }\n  },\n  mounted() {\n    this.exibirSucesso();\n    this.idUsuarioLogado = this.$route.params.id;\n    if (this.idUsuarioLogado === undefined) {\n      this.$router.push({\n        path: '/login'\n      });\n    }\n    this.idUsuarioLogado = this.$route.params.id;\n    if (!isNaN(this.idUsuarioLogado)) {\n      this.getPerfilLogado();\n      this.idUsuario = this.idUsuarioLogado;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["anunciar","enviarImagem","getPerfilLogado","Navbar","name","components","data","nomeProduto","descricaoProduto","valorProduto","paginacao","params","page","size","sort","por","selectedFile","imageUrl","logo_src","app_name","tipoPerfilLogado","idUsuarioLogado","usuario","methods","cadastrar","modal","then","response","produto","enviarImagemParaBackend","exibirSucesso","catch","error","console","handleFileInputChange","event","target","files","URL","createObjectURL","formData","FormData","append","id","uploadImage","alert","sucesso","setTimeout","mounted","$route","undefined","$router","push","path","isNaN","idUsuario"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\views\\AnunciarView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Navbar :logo=\"logo_src\" :alt=\"app_name\" :perfil=\"tipoPerfilLogado\" :usuario=\"idUsuario\"/>\r\n\r\n    <div v-if=\"sucesso\" class=\"mensagem-sucesso\">\r\n      Operação concluída com sucesso!\r\n    </div>\r\n\r\n    <div class=\"login-container\">\r\n      <h2>Anunciar</h2>\r\n      <br>\r\n      <br>\r\n      <input type=\"text\" class=\"login-input\" placeholder=\"Nome Produto\" v-model=\"nomeProduto\" required>\r\n      <input type=\"text\" class=\"login-input\" placeholder=\"Descrição Produto\" v-model=\"descricaoProduto\" required>\r\n      <input type=\"number\" class=\"login-input\" placeholder=\"Valor\" v-model=\"valorProduto\" required>\r\n      <br>\r\n      <br>\r\n      <div>\r\n        <input type=\"file\" @change=\"handleFileInputChange\" accept=\"image/*\" />\r\n        <button @click=\"uploadImage\">Upload</button>\r\n      </div>\r\n      <br>\r\n      <br>                   \r\n      <button class=\"login-button\" @click=\"cadastrar()\">Cadastrar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {anunciar, enviarImagem} from '@/services/AnunciarService.js'\r\nimport {getPerfilLogado} from '@/services/login.js';\r\n\r\nimport Navbar from '@/components/Navbar.vue'\r\n\r\nexport default {\r\n  name: 'CadastrarProdutoView',\r\n  components: {\r\n    Navbar\r\n  },\r\n  data() {\r\n        return {\r\n            nomeProduto: null,\r\n            descricaoProduto: null,\r\n            valorProduto: null,\r\n            paginacao: {},\r\n            params: {\r\n                page: 0,\r\n                size: 20,\r\n                sort: 'statusSubEmpresa',\r\n                por: 'desc'\r\n            },\r\n            selectedFile: null,\r\n            imageUrl: null,\r\n            logo_src: \"/img/logo.png\",\r\n            app_name: \"Fast - Ecommerce\",\r\n            tipoPerfilLogado: \"\",\r\n            idUsuarioLogado: 0,\r\n            usuario: null\r\n        };\r\n    },\r\n    methods: {\r\n      cadastrar(){\r\n\r\n        const modal = {\r\n          \"nomeProduto\": this.nomeProduto,\r\n          \"descricaoProduto\": this.descricaoProduto, \r\n          \"valorProduto\": this.valorProduto,\r\n          \"idUsuario\": this.idUsuarioLogado \r\n        };\r\n\r\n        \r\n        anunciar(modal).then(response => {\r\n                const produto = response;\r\n\r\n                this.enviarImagemParaBackend(this.selectedFile, produto);\r\n\r\n                this.exibirSucesso();\r\n\r\n            }).catch(error => {\r\n                console.error('Erro ao processar a requisição:', error);\r\n            });\r\n\r\n      },\r\n\r\n      handleFileInputChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.imageUrl = URL.createObjectURL(this.selectedFile);\r\n      },\r\n\r\n      // Função para enviar a imagem para o backend\r\n      enviarImagemParaBackend(selectedFile, produto){\r\n          // Cria um objeto FormData\r\n          let formData = new FormData();\r\n          // Adiciona a imagem ao objeto FormData\r\n          formData.append('imagem', selectedFile);\r\n\r\n          enviarImagem(formData, produto.id).then(response => {\r\n              // Faça algo com a resposta, se necessário\r\n          })\r\n          .catch(error => {\r\n              console.error('Erro ao enviar imagem para o backend:', error);\r\n          });\r\n      },\r\n\r\n      uploadImage() {\r\n        if (!this.selectedFile) {\r\n          alert('Por favor, selecione um arquivo.');\r\n          return;\r\n        }\r\n     },\r\n      getPerfilLogado(){\r\n  \r\n        getPerfilLogado(this.idUsuarioLogado).then(response => {\r\n              this.tipoPerfilLogado = response;\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao enviar imagem para o backend:', error);\r\n            });\r\n        \r\n      },\r\n\r\n      exibirSucesso() {\r\n        // Lógica para realizar a operação\r\n        // Após a operação bem-sucedida, definir sucesso como true para exibir a mensagem\r\n        this.sucesso = true;\r\n\r\n        // Defina um timeout para esconder a mensagem após alguns segundos (opcional)\r\n        setTimeout(() => {\r\n          this.sucesso = false;\r\n        }, 3000); // Esconde após 3 segundos\r\n      }\r\n  },\r\n  mounted(){\r\n    this.exibirSucesso();\r\n    this.idUsuarioLogado = this.$route.params.id;\r\n        if(this.idUsuarioLogado === undefined){\r\n          this.$router.push({\r\n                        path:\r\n                            '/login'\r\n                    });\r\n        }\r\n\r\n        this.idUsuarioLogado = this.$route.params.id;\r\n\r\n        if(!isNaN(this.idUsuarioLogado)){\r\n          this.getPerfilLogado();\r\n          this.idUsuario = this.idUsuarioLogado;\r\n        }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.login-container {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.login-error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n.mensagem-sucesso {\r\n  color: green;\r\n  background-color: #d4edda;\r\n  border-color: #c3e6cb;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}