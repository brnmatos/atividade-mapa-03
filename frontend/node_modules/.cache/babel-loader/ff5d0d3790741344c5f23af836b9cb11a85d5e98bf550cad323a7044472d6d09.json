{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\nconst SUBSCRIPTIONS = {};\nlet socket = null;\nlet stompCLient;\nlet prefixUrl = '';\nconst connect = () => {\n  return new Promise((resolve, reject) => {\n    socket = new SockJS('http://localhost:9090/ws');\n    stompCLient = Stomp.over(socket);\n    stompCLient.connect({\n      Authorization: 'Bearer JWT'\n    }, () => {\n      const {\n        sessionId\n      } = socket._transport.url.match(/\\/(?<sessionId>[^/]+?)\\/websocket$/).groups;\n      prefixUrl = `/user/${sessionId}`;\n      resolve();\n    }, err => {\n      reject(err);\n    });\n  });\n};\nconst subscribe = (suffixUrl, callback) => {\n  const url = prefixUrl + suffixUrl;\n  //const url = '/user/Admin' + suffixUrl;\n  const subscription = stompCLient.subscribe(url, response => {\n    if (typeof callback !== 'function') {\n      return;\n    }\n    let json = response.body;\n    if (typeof json === 'string') {\n      try {\n        json = JSON.parse(json);\n      } catch {\n        console.error('Erro fatal.');\n      }\n    }\n    callback(json);\n  });\n  SUBSCRIPTIONS[suffixUrl] = subscription;\n};\nexport { connect, subscribe };","map":{"version":3,"names":["SockJS","Stomp","SUBSCRIPTIONS","socket","stompCLient","prefixUrl","connect","Promise","resolve","reject","over","Authorization","sessionId","_transport","url","match","groups","err","subscribe","suffixUrl","callback","subscription","response","json","body","JSON","parse","console","error"],"sources":["C:/app/137-tech/radio-web/radio-web/frontend/src/utils/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\n\nconst SUBSCRIPTIONS = {};\n\nlet socket = null;\nlet stompCLient;\nlet prefixUrl = '';\n\nconst connect = () => {\n    \n    return new Promise((resolve, reject) => {\n        socket = new SockJS(\n            'http://localhost:9090/ws'\n        );\n        stompCLient = Stomp.over(socket);\n        stompCLient.connect(\n            {\n                Authorization: 'Bearer JWT'              \n            },\n            () => {\n                const { sessionId } = socket._transport.url.match(/\\/(?<sessionId>[^/]+?)\\/websocket$/).groups;\n                prefixUrl = `/user/${sessionId}`;\n                resolve();\n            },\n            err => {\n                reject(err);\n            }\n        );\n    });\n    \n}; \n\nconst subscribe = (suffixUrl, callback) => {\n    const url = prefixUrl + suffixUrl;\n    //const url = '/user/Admin' + suffixUrl;\n    const subscription = stompCLient.subscribe(url, (response) => {\n        if(typeof callback !== 'function'){\n            return;\n        }\n\n        let json = response.body;\n\n        if(typeof json === 'string'){\n            try{\n                json = JSON.parse(json);\n            }catch{\n                console.error('Erro fatal.');\n            }\n        }\n        callback(json);\n    });\n\n    SUBSCRIPTIONS[suffixUrl] = subscription;\n        \n};\n\nexport {\n    connect,\n    subscribe\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,aAAa,GAAG,CAAC,CAAC;AAExB,IAAIC,MAAM,GAAG,IAAI;AACjB,IAAIC,WAAW;AACf,IAAIC,SAAS,GAAG,EAAE;AAElB,MAAMC,OAAO,GAAG,MAAM;EAElB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCN,MAAM,GAAG,IAAIH,MAAM,CACf,0BAA0B,CAC7B;IACDI,WAAW,GAAGH,KAAK,CAACS,IAAI,CAACP,MAAM,CAAC;IAChCC,WAAW,CAACE,OAAO,CACf;MACIK,aAAa,EAAE;IACnB,CAAC,EACD,MAAM;MACF,MAAM;QAAEC;MAAU,CAAC,GAAGT,MAAM,CAACU,UAAU,CAACC,GAAG,CAACC,KAAK,CAAC,oCAAoC,CAAC,CAACC,MAAM;MAC9FX,SAAS,GAAI,SAAQO,SAAU,EAAC;MAChCJ,OAAO,EAAE;IACb,CAAC,EACDS,GAAG,IAAI;MACHR,MAAM,CAACQ,GAAG,CAAC;IACf,CAAC,CACJ;EACL,CAAC,CAAC;AAEN,CAAC;AAED,MAAMC,SAAS,GAAG,CAACC,SAAS,EAAEC,QAAQ,KAAK;EACvC,MAAMN,GAAG,GAAGT,SAAS,GAAGc,SAAS;EACjC;EACA,MAAME,YAAY,GAAGjB,WAAW,CAACc,SAAS,CAACJ,GAAG,EAAGQ,QAAQ,IAAK;IAC1D,IAAG,OAAOF,QAAQ,KAAK,UAAU,EAAC;MAC9B;IACJ;IAEA,IAAIG,IAAI,GAAGD,QAAQ,CAACE,IAAI;IAExB,IAAG,OAAOD,IAAI,KAAK,QAAQ,EAAC;MACxB,IAAG;QACCA,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;MAC3B,CAAC,OAAK;QACFI,OAAO,CAACC,KAAK,CAAC,aAAa,CAAC;MAChC;IACJ;IACAR,QAAQ,CAACG,IAAI,CAAC;EAClB,CAAC,CAAC;EAEFrB,aAAa,CAACiB,SAAS,CAAC,GAAGE,YAAY;AAE3C,CAAC;AAED,SACIf,OAAO,EACPY,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}