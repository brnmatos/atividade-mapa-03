{"ast":null,"code":"import Core from '@any-touch/core';\nimport Pan from '@any-touch/pan';\nexport default {\n  name: 'AudioPlayer',\n  inheritAttrs: false,\n  props: {\n    // 音频播放列表\n    audioList: {\n      default: null,\n      type: Array\n    },\n    // 是否显示播放按钮\n    showPlayButton: {\n      default: true,\n      type: Boolean\n    },\n    // 是否显示上一首按钮\n    showPrevButton: {\n      default: true,\n      type: Boolean\n    },\n    // 是否显示下一首按钮\n    showNextButton: {\n      default: true,\n      type: Boolean\n    },\n    // 是否显示音量按钮\n    showVolumeButton: {\n      default: true,\n      type: Boolean\n    },\n    // 显示进度条\n    showProgressBar: {\n      default: true,\n      type: Boolean\n    },\n    // 播放前的回调函数\n    beforePlay: {\n      default: null,\n      type: Function\n    },\n    // 上一首前的回调函数\n    beforePrev: {\n      default: null,\n      type: Function\n    },\n    // 下一首前的回调函数\n    beforeNext: {\n      default: null,\n      type: Function\n    },\n    // 是否列表循环播放\n    isLoop: {\n      type: Boolean,\n      default: true\n    },\n    // 是否自动播放下一首\n    isAutoPlayNext: {\n      type: Boolean,\n      default: true\n    },\n    // 进度更新间隔\n    progressInterval: {\n      default: 1000,\n      type: Number\n    },\n    // 是否显示倍速播放速率\n    showPlaybackRate: {\n      type: Boolean,\n      default: true\n    },\n    playbackRates: {\n      type: Array,\n      default: () => [0.5, 1, 1.5, 2]\n    },\n    themeColor: {\n      type: String,\n      default: '#EC4141'\n    },\n    // 是否禁用进度条可拖拽功能\n    disabledProgressDrag: {\n      type: Boolean,\n      default: false\n    },\n    // 是否禁用进度条可点击功能\n    disabledProgressClick: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['pause', 'play-prev', 'play-next', 'timeupdate', 'loadedmetadata', 'ended', 'progress-start', 'progress-end', 'progress-move', 'progress-click', 'playing', 'play', 'play-error'],\n  data() {\n    return {\n      isIOS: /iPhone|iPad|iPod/i.test(window.navigator.userAgent),\n      // 是否是IOS设备\n      isPlaying: false,\n      // 音频是否正在播放\n      isDragging: false,\n      // 是否正在拖拽音频进度\n      isDraggingVolume: false,\n      // 是否正在拖拽音量进度\n      isShowErrorMessage: false,\n      isLoading: false,\n      isShowVolume: false,\n      isShowRates: false,\n      timer: null,\n      noticeMessage: '',\n      duration: '',\n      // 音频持续时间\n      currentPlayIndex: 0,\n      // 当前播放的音频位置索引\n      currentTime: '',\n      // 音频当前播放时间\n      currentVolume: 1,\n      // 当前音量\n      playbackRate: 1,\n      // 当前播放速率\n      at: null\n    };\n  },\n  computed: {\n    currentTimeFormatted() {\n      return this.currentTime ? this.formatTime(this.currentTime) : '00:00';\n    },\n    durationFormatted() {\n      return this.duration ? this.formatTime(this.duration) : '00:00';\n    }\n  },\n  mounted() {\n    this.at = new Core(this.$el, {\n      preventDefault: false\n    });\n    this.at.use(Pan);\n  },\n  beforeUnmount() {\n    this.at.destroy();\n    this.pause();\n  },\n  methods: {\n    handleVolumeIconTouchstart() {\n      this.isShowVolume = !this.isShowVolume;\n    },\n    handleVolumePanmove(event) {\n      let playVolumeWrapRect = this.$refs.playVolumeWrap.getBoundingClientRect();\n      let pageY = event.y;\n      let offsetTop;\n      let volume;\n      offsetTop = Math.round(playVolumeWrapRect.bottom - pageY);\n      volume = offsetTop / this.$refs.playVolumeWrap.offsetHeight;\n      volume = Math.min(volume, 1);\n      volume = Math.max(volume, 0);\n      this.$refs.audio.volume = volume;\n      this.currentVolume = volume;\n    },\n    handleVolumePanend() {\n      this.isShowVolume = false;\n    },\n    // 设定播放速率\n    handleSetPlaybackRate(rate) {\n      this.playbackRate = +rate;\n      this.$refs.audio.playbackRate = +rate;\n      this.isShowRates = false;\n    },\n    // 错误消息处理\n    handleShowErrorMessage(opts = {}) {\n      this.noticeMessage = opts.message;\n      this.isShowErrorMessage = true;\n      window.setTimeout(() => {\n        this.isShowErrorMessage = false;\n      }, opts.duration || 3000);\n    },\n    // 当媒介元素的持续时间以及其它媒介已加载数据时运行脚本\n    onLoadedmetadata(event) {\n      this.duration = this.$refs.audio.duration;\n      this.$emit('loadedmetadata', event);\n    },\n    // 当前的播放位置发送改变时触发\n    onTimeUpdate(event) {\n      this.$emit('timeupdate', event);\n    },\n    // 格式化秒为分\n    formatTime(second) {\n      // 将秒数除以60，然后下舍入，既得到分钟数\n      let hour;\n      hour = Math.floor(second / 60);\n      // 取得秒%60的余数，既得到秒数\n      second = Math.ceil(second % 60);\n      // 将变量转换为字符串\n      hour += '';\n      second += '';\n      // 如果只有一位数，前面增加一个0\n      hour = hour.length === 1 ? '0' + hour : hour;\n      second = second.length === 1 ? '0' + second : second;\n      return hour + ':' + second;\n    },\n    // 音频播放完毕\n    onEnded(event) {\n      window.setTimeout(() => {\n        this.pause();\n        this.$emit('ended', event);\n        if (this.isLoop && this.isAutoPlayNext) {\n          this.playNext();\n        }\n      }, 1000);\n    },\n    handleProgressPanstart(event) {\n      if (this.disabledProgressDrag) return;\n      this.isDragging = true;\n      this.$emit('progress-start', event);\n    },\n    handleProgressPanend(event) {\n      if (this.disabledProgressDrag) return;\n      this.$refs.audio.currentTime = this.currentTime;\n      this.play();\n      this.isDragging = false;\n      this.$emit('progress-end', event);\n    },\n    handleProgressPanmove(event) {\n      if (this.disabledProgressDrag) return;\n      let pageX = event.x;\n      let bcr = event.target.getBoundingClientRect();\n      let targetLeft = parseInt(getComputedStyle(event.target).left);\n      let offsetLeft = targetLeft + (pageX - bcr.left);\n      offsetLeft = Math.min(offsetLeft, this.$refs.audioProgressWrap.offsetWidth);\n      offsetLeft = Math.max(offsetLeft, 0);\n      // 设置点点位置\n      this.setPointPosition(offsetLeft);\n      // 设置进度条\n      this.$refs.audioProgress.style.width = offsetLeft + 'px';\n      // 设置当前时间\n      this.currentTime = offsetLeft / this.$refs.audioProgressWrap.offsetWidth * this.duration;\n      this.$emit('progress-move', event);\n    },\n    // 初始化音频进度的点击逻辑\n    handleClickProgressWrap(event) {\n      if (this.disabledProgressClick) return;\n      let target = event.target;\n      let offsetX = event.offsetX;\n      if (target === this.$refs.audioProgressPoint) {\n        return;\n      }\n\n      // 设置当前播放位置\n      this.currentTime = offsetX / this.$refs.audioProgressWrap.offsetWidth * this.duration;\n      this.$refs.audio.currentTime = this.currentTime;\n      // 设置点点位置\n      this.setPointPosition(offsetX);\n      // 设置进度条\n      this.$refs.audioProgress.style.width = offsetX + 'px';\n      this.play();\n      this.$emit('progress-click', event);\n    },\n    // 设置点点位置\n    setPointPosition(offsetLeft) {\n      this.$refs.audioProgressPoint.style.left = offsetLeft - this.$refs.audioProgressPoint.offsetWidth / 2 + 'px';\n    },\n    // 播放中\n    playing() {\n      // 正在拖拽进度\n      if (this.isDragging) {\n        return;\n      }\n      let offsetLeft = this.$refs.audio.currentTime / this.$refs.audio.duration * this.$refs.audioProgressWrap.offsetWidth;\n      this.currentTime = this.$refs.audio.currentTime;\n      this.$refs.audioProgress.style.width = offsetLeft + 'px'; // 设置播放进度条\n      this.setPointPosition(offsetLeft); // 设置播放进度拖拽点位置\n      this.$emit('playing');\n    },\n    // 开始播放\n    play() {\n      this.isLoading = true;\n      let handlePlay = () => {\n        this.$refs.audio.play().then(() => {\n          this.$nextTick(() => {\n            if (this.timer) {\n              this.currentTime = this.$refs.audio.currentTime;\n            } else {\n              this.timer = window.setInterval(this.playing, this.progressInterval);\n            }\n            this.isPlaying = true;\n            this.isLoading = false;\n          });\n          this.$emit('play');\n        }).catch(data => {\n          this.handleShowErrorMessage({\n            message: data.message\n          });\n\n          // Failed to load because no supported source was found.\n          if (data.code === 9) {\n            if (this.isAutoPlayNext) {\n              window.setTimeout(() => {\n                this.playNext();\n              }, 3000);\n            }\n          }\n          this.isLoading = false;\n          this.$emit('play-error', data);\n        });\n      };\n\n      // 解决 iOS 异步请求后无法播放\n      if (this.isIOS) {\n        console.log('为了解决 iOS 设备接口异步请求后出现无法播放问题，请无视 The play() request was interrupted by a call to pause() 错误');\n        this.$refs.audio.play();\n        this.$refs.audio.pause();\n      }\n      if (this.beforePlay) {\n        this.beforePlay(state => {\n          if (state !== false) {\n            handlePlay();\n          }\n        });\n        return;\n      }\n      handlePlay();\n    },\n    // 暂停播放\n    pause() {\n      this.$refs.audio.pause();\n      this.$nextTick(() => {\n        this.clearTimer();\n        this.isPlaying = false;\n        this.$emit('pause');\n      });\n    },\n    // 播放上一首\n    playPrev() {\n      if (this.currentPlayIndex <= 0 && !this.isLoop) {\n        // 无上一首了\n        return;\n      }\n      this.clearTimer();\n      let handlePrev = () => {\n        if (this.currentPlayIndex <= 0 && this.isLoop) {\n          // 列表循环\n          this.currentPlayIndex = this.audioList.length - 1;\n        } else {\n          this.currentPlayIndex--;\n        }\n        this.$nextTick(() => {\n          this.play();\n          this.$emit('play-prev');\n        });\n      };\n      if (this.beforePrev) {\n        this.beforePrev(state => {\n          if (state !== false) {\n            handlePrev();\n          }\n        });\n        return;\n      }\n      handlePrev();\n    },\n    clearTimer() {\n      window.clearInterval(this.timer);\n      this.timer = null;\n    },\n    // 播放下一首\n    playNext() {\n      if (this.currentPlayIndex + 1 >= this.audioList.length && !this.isLoop) {\n        // 无下一首了\n        return;\n      }\n      this.clearTimer();\n      let handleNext = () => {\n        // 已经到达列表最后一首\n        if (this.currentPlayIndex + 1 >= this.audioList.length && this.isLoop) {\n          this.currentPlayIndex = 0;\n        } else {\n          this.currentPlayIndex++;\n        }\n        this.$nextTick(() => {\n          this.play();\n          this.$emit('play-next');\n        });\n      };\n      if (this.beforeNext) {\n        this.beforeNext(state => {\n          if (state !== false) {\n            handleNext();\n          }\n        });\n        return;\n      }\n      handleNext();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Core","Pan","name","inheritAttrs","props","audioList","default","type","Array","showPlayButton","Boolean","showPrevButton","showNextButton","showVolumeButton","showProgressBar","beforePlay","Function","beforePrev","beforeNext","isLoop","isAutoPlayNext","progressInterval","Number","showPlaybackRate","playbackRates","themeColor","String","disabledProgressDrag","disabledProgressClick","emits","data","isIOS","test","window","navigator","userAgent","isPlaying","isDragging","isDraggingVolume","isShowErrorMessage","isLoading","isShowVolume","isShowRates","timer","noticeMessage","duration","currentPlayIndex","currentTime","currentVolume","playbackRate","at","computed","currentTimeFormatted","formatTime","durationFormatted","mounted","$el","preventDefault","use","beforeUnmount","destroy","pause","methods","handleVolumeIconTouchstart","handleVolumePanmove","event","playVolumeWrapRect","$refs","playVolumeWrap","getBoundingClientRect","pageY","y","offsetTop","volume","Math","round","bottom","offsetHeight","min","max","audio","handleVolumePanend","handleSetPlaybackRate","rate","handleShowErrorMessage","opts","message","setTimeout","onLoadedmetadata","$emit","onTimeUpdate","second","hour","floor","ceil","length","onEnded","playNext","handleProgressPanstart","handleProgressPanend","play","handleProgressPanmove","pageX","x","bcr","target","targetLeft","parseInt","getComputedStyle","left","offsetLeft","audioProgressWrap","offsetWidth","setPointPosition","audioProgress","style","width","handleClickProgressWrap","offsetX","audioProgressPoint","playing","handlePlay","then","$nextTick","setInterval","catch","code","console","log","state","clearTimer","playPrev","handlePrev","clearInterval","handleNext"],"sourceRoot":"","sources":["C:\\app\\137-tech\\radio-web\\radio-web\\frontend\\node_modules\\@liripeng\\vue-audio-player\\packages\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"audio-player\">\r\n    <div class=\"audio__btn-wrap\">\r\n      <div\r\n        v-if=\"showPlaybackRate\"\r\n        class=\"audio__play-rate\"\r\n        :style=\"{\r\n          color: themeColor,\r\n        }\"\r\n      >\r\n        <span @click.stop=\"isShowRates = !isShowRates\">{{\r\n          playbackRate.toFixed(1) + 'x'\r\n        }}</span>\r\n        <transition name=\"fade-rate\">\r\n          <div\r\n            v-show=\"isShowRates\"\r\n            class=\"audio__play-rate__dropdown\"\r\n            :style=\"{\r\n              backgroundColor: themeColor,\r\n            }\"\r\n          >\r\n            <div\r\n              v-for=\"rate in playbackRates\"\r\n              :key=\"'pr_' + rate\"\r\n              @click.stop=\"handleSetPlaybackRate(rate)\"\r\n            >\r\n              {{ rate.toFixed(1) + 'x' }}\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"showPrevButton\"\r\n        class=\"audio__play-prev\"\r\n        :class=\"{ disable: !isLoop && currentPlayIndex === 0 }\"\r\n        @click.stop=\"playPrev\"\r\n        :style=\"{\r\n          color: themeColor,\r\n        }\"\r\n      >\r\n        <slot name=\"play-prev\">\r\n          <svg class=\"audio__play-icon\" aria-hidden=\"true\">\r\n            <use xlink:href=\"#icon-play-prev\" />\r\n          </svg>\r\n        </slot>\r\n      </div>\r\n\r\n      <div v-if=\"isLoading\" class=\"audio__play-loading\">\r\n        <span\r\n          v-for=\"item in 8\"\r\n          :key=\"item\"\r\n          :style=\"{\r\n            backgroundColor: themeColor,\r\n          }\"\r\n        />\r\n      </div>\r\n\r\n      <template v-else>\r\n        <div\r\n          v-if=\"!isPlaying && showPlayButton\"\r\n          class=\"audio__play-start\"\r\n          @click.stop=\"play\"\r\n          :style=\"{\r\n            color: themeColor,\r\n          }\"\r\n        >\r\n          <slot name=\"play-start\">\r\n            <svg class=\"audio__play-icon\" aria-hidden=\"true\">\r\n              <use xlink:href=\"#icon-play\" />\r\n            </svg>\r\n          </slot>\r\n        </div>\r\n\r\n        <div\r\n          v-else-if=\"showPlayButton\"\r\n          class=\"audio__play-pause\"\r\n          @click.stop=\"pause\"\r\n          :style=\"{\r\n            color: themeColor,\r\n          }\"\r\n        >\r\n          <slot name=\"play-pause\">\r\n            <svg class=\"audio__play-icon\" aria-hidden=\"true\">\r\n              <use xlink:href=\"#icon-pause\" />\r\n            </svg>\r\n          </slot>\r\n        </div>\r\n      </template>\r\n\r\n      <div\r\n        v-if=\"showNextButton\"\r\n        class=\"audio__play-next\"\r\n        :class=\"{\r\n          disable: !isLoop && currentPlayIndex === audioList.length - 1,\r\n        }\"\r\n        @click.stop=\"playNext\"\r\n        :style=\"{\r\n          color: themeColor,\r\n        }\"\r\n      >\r\n        <slot name=\"play-next\">\r\n          <svg class=\"audio__play-icon\" aria-hidden=\"true\">\r\n            <use xlink:href=\"#icon-play-next\" />\r\n          </svg>\r\n        </slot>\r\n      </div>\r\n\r\n      <div v-if=\"showVolumeButton\" class=\"audio__play-volume-icon-wrap\">\r\n        <svg\r\n          class=\"audio__play-icon\"\r\n          aria-hidden=\"true\"\r\n          :style=\"{\r\n            color: themeColor,\r\n          }\"\r\n          @click.stop=\"handleVolumeIconTouchstart\"\r\n        >\r\n          <use\r\n            :xlink:href=\"currentVolume ? `#icon-volume` : `#icon-volume-no`\"\r\n          />\r\n        </svg>\r\n\r\n        <transition name=\"fade-volume\">\r\n          <div\r\n            v-show=\"isShowVolume\"\r\n            ref=\"playVolumeWrap\"\r\n            class=\"audio__play-volume-wrap\"\r\n            @click.stop=\"handleVolumePanmove\"\r\n            @panmove=\"handleVolumePanmove\"\r\n            @panend=\"handleVolumePanend\"\r\n          >\r\n            <div\r\n              ref=\"playVolume\"\r\n              class=\"audio__play-volume\"\r\n              :style=\"{\r\n                height: currentVolume * 100 + '%',\r\n                backgroundColor: themeColor,\r\n              }\"\r\n            />\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <div v-show=\"isShowErrorMessage\" class=\"audio__notice\">\r\n        {{ noticeMessage }}\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      v-show=\"showProgressBar\"\r\n      ref=\"audioProgressWrap\"\r\n      class=\"audio__progress-wrap\"\r\n      @click.stop=\"handleClickProgressWrap\"\r\n    >\r\n      <div\r\n        ref=\"audioProgress\"\r\n        class=\"audio__progress\"\r\n        :style=\"{\r\n          backgroundColor: themeColor,\r\n        }\"\r\n      />\r\n      <div\r\n        ref=\"audioProgressPoint\"\r\n        class=\"audio__progress-point\"\r\n        :style=\"{\r\n          backgroundColor: themeColor,\r\n          boxShadow: `0 0 10px 0 ${themeColor}`,\r\n        }\"\r\n        @panstart=\"handleProgressPanstart\"\r\n        @panend=\"handleProgressPanend\"\r\n        @panmove=\"handleProgressPanmove\"\r\n      />\r\n    </div>\r\n\r\n    <div v-show=\"showProgressBar\" class=\"audio__time-wrap\">\r\n      <div class=\"audio__current-time\">\r\n        {{ currentTimeFormatted }}\r\n      </div>\r\n      <div class=\"audio__duration\">\r\n        {{ durationFormatted }}\r\n      </div>\r\n    </div>\r\n\r\n    <audio\r\n      ref=\"audio\"\r\n      class=\"audio-player__audio\"\r\n      :src=\"audioList[currentPlayIndex]\"\r\n      v-bind=\"$attrs\"\r\n      @ended=\"onEnded\"\r\n      @timeupdate=\"onTimeUpdate\"\r\n      @loadedmetadata=\"onLoadedmetadata\"\r\n    >\r\n      浏览器太老咯，请升级浏览器吧~\r\n    </audio>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Core from '@any-touch/core'\r\nimport Pan from '@any-touch/pan'\r\n\r\nexport default {\r\n  name: 'AudioPlayer',\r\n\r\n  inheritAttrs: false,\r\n\r\n  props: {\r\n    // 音频播放列表\r\n    audioList: {\r\n      default: null,\r\n      type: Array,\r\n    },\r\n\r\n    // 是否显示播放按钮\r\n    showPlayButton: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n\r\n    // 是否显示上一首按钮\r\n    showPrevButton: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n\r\n    // 是否显示下一首按钮\r\n    showNextButton: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n\r\n    // 是否显示音量按钮\r\n    showVolumeButton: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n\r\n    // 显示进度条\r\n    showProgressBar: {\r\n      default: true,\r\n      type: Boolean,\r\n    },\r\n\r\n    // 播放前的回调函数\r\n    beforePlay: {\r\n      default: null,\r\n      type: Function,\r\n    },\r\n\r\n    // 上一首前的回调函数\r\n    beforePrev: {\r\n      default: null,\r\n      type: Function,\r\n    },\r\n\r\n    // 下一首前的回调函数\r\n    beforeNext: {\r\n      default: null,\r\n      type: Function,\r\n    },\r\n\r\n    // 是否列表循环播放\r\n    isLoop: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    // 是否自动播放下一首\r\n    isAutoPlayNext: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    // 进度更新间隔\r\n    progressInterval: {\r\n      default: 1000,\r\n      type: Number,\r\n    },\r\n\r\n    // 是否显示倍速播放速率\r\n    showPlaybackRate: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    playbackRates: {\r\n      type: Array,\r\n      default: () => [0.5, 1, 1.5, 2],\r\n    },\r\n\r\n    themeColor: {\r\n      type: String,\r\n      default: '#EC4141',\r\n    },\r\n\r\n    // 是否禁用进度条可拖拽功能\r\n    disabledProgressDrag: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    // 是否禁用进度条可点击功能\r\n    disabledProgressClick: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  emits: [\r\n    'pause',\r\n    'play-prev',\r\n    'play-next',\r\n    'timeupdate',\r\n    'loadedmetadata',\r\n    'ended',\r\n    'progress-start',\r\n    'progress-end',\r\n    'progress-move',\r\n    'progress-click',\r\n    'playing',\r\n    'play',\r\n    'play-error',\r\n  ],\r\n\r\n  data() {\r\n    return {\r\n      isIOS: /iPhone|iPad|iPod/i.test(window.navigator.userAgent), // 是否是IOS设备\r\n      isPlaying: false, // 音频是否正在播放\r\n      isDragging: false, // 是否正在拖拽音频进度\r\n      isDraggingVolume: false, // 是否正在拖拽音量进度\r\n      isShowErrorMessage: false,\r\n      isLoading: false,\r\n      isShowVolume: false,\r\n      isShowRates: false,\r\n      timer: null,\r\n      noticeMessage: '',\r\n      duration: '', // 音频持续时间\r\n      currentPlayIndex: 0, // 当前播放的音频位置索引\r\n      currentTime: '', // 音频当前播放时间\r\n      currentVolume: 1, // 当前音量\r\n      playbackRate: 1, // 当前播放速率\r\n      at: null,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentTimeFormatted() {\r\n      return this.currentTime ? this.formatTime(this.currentTime) : '00:00'\r\n    },\r\n\r\n    durationFormatted() {\r\n      return this.duration ? this.formatTime(this.duration) : '00:00'\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.at = new Core(this.$el, { preventDefault: false })\r\n    this.at.use(Pan)\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.at.destroy()\r\n    this.pause()\r\n  },\r\n\r\n  methods: {\r\n    handleVolumeIconTouchstart() {\r\n      this.isShowVolume = !this.isShowVolume\r\n    },\r\n\r\n    handleVolumePanmove(event) {\r\n      let playVolumeWrapRect = this.$refs.playVolumeWrap.getBoundingClientRect()\r\n      let pageY = event.y\r\n      let offsetTop\r\n      let volume\r\n\r\n      offsetTop = Math.round(playVolumeWrapRect.bottom - pageY)\r\n      volume = offsetTop / this.$refs.playVolumeWrap.offsetHeight\r\n      volume = Math.min(volume, 1)\r\n      volume = Math.max(volume, 0)\r\n      this.$refs.audio.volume = volume\r\n      this.currentVolume = volume\r\n    },\r\n\r\n    handleVolumePanend() {\r\n      this.isShowVolume = false\r\n    },\r\n\r\n    // 设定播放速率\r\n    handleSetPlaybackRate(rate) {\r\n      this.playbackRate = +rate\r\n      this.$refs.audio.playbackRate = +rate\r\n      this.isShowRates = false\r\n    },\r\n\r\n    // 错误消息处理\r\n    handleShowErrorMessage(opts = {}) {\r\n      this.noticeMessage = opts.message\r\n      this.isShowErrorMessage = true\r\n\r\n      window.setTimeout(() => {\r\n        this.isShowErrorMessage = false\r\n      }, opts.duration || 3000)\r\n    },\r\n\r\n    // 当媒介元素的持续时间以及其它媒介已加载数据时运行脚本\r\n    onLoadedmetadata(event) {\r\n      this.duration = this.$refs.audio.duration\r\n      this.$emit('loadedmetadata', event)\r\n    },\r\n\r\n    // 当前的播放位置发送改变时触发\r\n    onTimeUpdate(event) {\r\n      this.$emit('timeupdate', event)\r\n    },\r\n\r\n    // 格式化秒为分\r\n    formatTime(second) {\r\n      // 将秒数除以60，然后下舍入，既得到分钟数\r\n      let hour\r\n      hour = Math.floor(second / 60)\r\n      // 取得秒%60的余数，既得到秒数\r\n      second = Math.ceil(second % 60)\r\n      // 将变量转换为字符串\r\n      hour += ''\r\n      second += ''\r\n      // 如果只有一位数，前面增加一个0\r\n      hour = hour.length === 1 ? '0' + hour : hour\r\n      second = second.length === 1 ? '0' + second : second\r\n      return hour + ':' + second\r\n    },\r\n\r\n    // 音频播放完毕\r\n    onEnded(event) {\r\n      window.setTimeout(() => {\r\n        this.pause()\r\n        this.$emit('ended', event)\r\n\r\n        if (this.isLoop && this.isAutoPlayNext) {\r\n          this.playNext()\r\n        }\r\n      }, 1000)\r\n    },\r\n\r\n    handleProgressPanstart(event) {\r\n      if (this.disabledProgressDrag) return\r\n\r\n      this.isDragging = true\r\n      this.$emit('progress-start', event)\r\n    },\r\n\r\n    handleProgressPanend(event) {\r\n      if (this.disabledProgressDrag) return\r\n\r\n      this.$refs.audio.currentTime = this.currentTime\r\n      this.play()\r\n      this.isDragging = false\r\n      this.$emit('progress-end', event)\r\n    },\r\n\r\n    handleProgressPanmove(event) {\r\n      if (this.disabledProgressDrag) return\r\n\r\n      let pageX = event.x\r\n      let bcr = event.target.getBoundingClientRect()\r\n      let targetLeft = parseInt(getComputedStyle(event.target).left)\r\n      let offsetLeft = targetLeft + (pageX - bcr.left)\r\n\r\n      offsetLeft = Math.min(\r\n        offsetLeft,\r\n        this.$refs.audioProgressWrap.offsetWidth\r\n      )\r\n      offsetLeft = Math.max(offsetLeft, 0)\r\n      // 设置点点位置\r\n      this.setPointPosition(offsetLeft)\r\n      // 设置进度条\r\n      this.$refs.audioProgress.style.width = offsetLeft + 'px'\r\n      // 设置当前时间\r\n      this.currentTime =\r\n        (offsetLeft / this.$refs.audioProgressWrap.offsetWidth) * this.duration\r\n      this.$emit('progress-move', event)\r\n    },\r\n\r\n    // 初始化音频进度的点击逻辑\r\n    handleClickProgressWrap(event) {\r\n      if (this.disabledProgressClick) return\r\n\r\n      let target = event.target\r\n      let offsetX = event.offsetX\r\n\r\n      if (target === this.$refs.audioProgressPoint) {\r\n        return\r\n      }\r\n\r\n      // 设置当前播放位置\r\n      this.currentTime =\r\n        (offsetX / this.$refs.audioProgressWrap.offsetWidth) * this.duration\r\n      this.$refs.audio.currentTime = this.currentTime\r\n      // 设置点点位置\r\n      this.setPointPosition(offsetX)\r\n      // 设置进度条\r\n      this.$refs.audioProgress.style.width = offsetX + 'px'\r\n      this.play()\r\n      this.$emit('progress-click', event)\r\n    },\r\n\r\n    // 设置点点位置\r\n    setPointPosition(offsetLeft) {\r\n      this.$refs.audioProgressPoint.style.left =\r\n        offsetLeft - this.$refs.audioProgressPoint.offsetWidth / 2 + 'px'\r\n    },\r\n\r\n    // 播放中\r\n    playing() {\r\n      // 正在拖拽进度\r\n      if (this.isDragging) {\r\n        return\r\n      }\r\n\r\n      let offsetLeft =\r\n        (this.$refs.audio.currentTime / this.$refs.audio.duration) *\r\n        this.$refs.audioProgressWrap.offsetWidth\r\n\r\n      this.currentTime = this.$refs.audio.currentTime\r\n      this.$refs.audioProgress.style.width = offsetLeft + 'px' // 设置播放进度条\r\n      this.setPointPosition(offsetLeft) // 设置播放进度拖拽点位置\r\n      this.$emit('playing')\r\n    },\r\n\r\n    // 开始播放\r\n    play() {\r\n      this.isLoading = true\r\n\r\n      let handlePlay = () => {\r\n        this.$refs.audio\r\n          .play()\r\n          .then(() => {\r\n            this.$nextTick(() => {\r\n              if (this.timer) {\r\n                this.currentTime = this.$refs.audio.currentTime\r\n              } else {\r\n                this.timer = window.setInterval(\r\n                  this.playing,\r\n                  this.progressInterval\r\n                )\r\n              }\r\n\r\n              this.isPlaying = true\r\n              this.isLoading = false\r\n            })\r\n            this.$emit('play')\r\n          })\r\n          .catch((data) => {\r\n            this.handleShowErrorMessage({\r\n              message: data.message,\r\n            })\r\n\r\n            // Failed to load because no supported source was found.\r\n            if (data.code === 9) {\r\n              if (this.isAutoPlayNext) {\r\n                window.setTimeout(() => {\r\n                  this.playNext()\r\n                }, 3000)\r\n              }\r\n            }\r\n\r\n            this.isLoading = false\r\n            this.$emit('play-error', data)\r\n          })\r\n      }\r\n\r\n      // 解决 iOS 异步请求后无法播放\r\n      if (this.isIOS) {\r\n        console.log(\r\n          '为了解决 iOS 设备接口异步请求后出现无法播放问题，请无视 The play() request was interrupted by a call to pause() 错误'\r\n        )\r\n        this.$refs.audio.play()\r\n        this.$refs.audio.pause()\r\n      }\r\n\r\n      if (this.beforePlay) {\r\n        this.beforePlay((state) => {\r\n          if (state !== false) {\r\n            handlePlay()\r\n          }\r\n        })\r\n        return\r\n      }\r\n\r\n      handlePlay()\r\n    },\r\n\r\n    // 暂停播放\r\n    pause() {\r\n      this.$refs.audio.pause()\r\n      this.$nextTick(() => {\r\n        this.clearTimer()\r\n        this.isPlaying = false\r\n        this.$emit('pause')\r\n      })\r\n    },\r\n\r\n    // 播放上一首\r\n    playPrev() {\r\n      if (this.currentPlayIndex <= 0 && !this.isLoop) {\r\n        // 无上一首了\r\n        return\r\n      }\r\n\r\n      this.clearTimer()\r\n\r\n      let handlePrev = () => {\r\n        if (this.currentPlayIndex <= 0 && this.isLoop) {\r\n          // 列表循环\r\n          this.currentPlayIndex = this.audioList.length - 1\r\n        } else {\r\n          this.currentPlayIndex--\r\n        }\r\n\r\n        this.$nextTick(() => {\r\n          this.play()\r\n          this.$emit('play-prev')\r\n        })\r\n      }\r\n\r\n      if (this.beforePrev) {\r\n        this.beforePrev((state) => {\r\n          if (state !== false) {\r\n            handlePrev()\r\n          }\r\n        })\r\n        return\r\n      }\r\n      handlePrev()\r\n    },\r\n\r\n    clearTimer() {\r\n      window.clearInterval(this.timer)\r\n      this.timer = null\r\n    },\r\n\r\n    // 播放下一首\r\n    playNext() {\r\n      if (this.currentPlayIndex + 1 >= this.audioList.length && !this.isLoop) {\r\n        // 无下一首了\r\n        return\r\n      }\r\n\r\n      this.clearTimer()\r\n\r\n      let handleNext = () => {\r\n        // 已经到达列表最后一首\r\n        if (this.currentPlayIndex + 1 >= this.audioList.length && this.isLoop) {\r\n          this.currentPlayIndex = 0\r\n        } else {\r\n          this.currentPlayIndex++\r\n        }\r\n\r\n        this.$nextTick(() => {\r\n          this.play()\r\n          this.$emit('play-next')\r\n        })\r\n      }\r\n\r\n      if (this.beforeNext) {\r\n        this.beforeNext((state) => {\r\n          if (state !== false) {\r\n            handleNext()\r\n          }\r\n        })\r\n        return\r\n      }\r\n\r\n      handleNext()\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n@keyframes fadeVolume {\r\n  from {\r\n    height: 0;\r\n  }\r\n  to {\r\n    height: 50px;\r\n  }\r\n}\r\n\r\n@keyframes fadeRate {\r\n  from {\r\n    max-height: 0;\r\n  }\r\n  to {\r\n    max-height: 120px;\r\n  }\r\n}\r\n\r\n.fade-volume-enter-active {\r\n  animation: fadeVolume 0.3s;\r\n}\r\n\r\n.fade-volume-leave-active {\r\n  animation: fadeVolume 0.3s reverse;\r\n}\r\n\r\n.fade-rate-enter-active {\r\n  animation: fadeRate 0.3s;\r\n}\r\n\r\n.fade-rate-leave-active {\r\n  animation: fadeRate 0.3s reverse;\r\n}\r\n\r\n.audio-player .audio__btn-wrap {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.audio-player .audio__play-icon {\r\n  width: 100%;\r\n  height: 100%;\r\n  fill: currentColor;\r\n  overflow: hidden;\r\n}\r\n\r\n.audio-player .audio__play-volume-icon-wrap {\r\n  position: relative;\r\n  width: 21px;\r\n  height: 21px;\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n  margin-left: 16px;\r\n}\r\n\r\n.audio-player .audio__play-volume-icon-wrap .audio__play-volume-wrap {\r\n  position: absolute;\r\n  width: 14px;\r\n  height: 50px;\r\n  bottom: 21px;\r\n  left: 0;\r\n  background-color: #ddd;\r\n  border-radius: 10px;\r\n}\r\n\r\n.audio-player\r\n  .audio__play-volume-icon-wrap\r\n  .audio__play-volume-wrap\r\n  .audio__play-volume {\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  border-radius: 10px;\r\n}\r\n\r\n.audio-player .audio__play-rate {\r\n  position: relative;\r\n  height: 21px;\r\n  line-height: 21px;\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n  font-size: 14px;\r\n  margin-right: 16px;\r\n}\r\n\r\n.audio-player .audio__play-rate__dropdown {\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  padding: 2px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.audio-player .audio__play-prev {\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.audio-player .audio__play-prev svg {\r\n  display: block;\r\n  width: 21px;\r\n  height: 33px;\r\n}\r\n\r\n.audio-player .audio__play-prev.disable {\r\n  opacity: 0.5;\r\n}\r\n\r\n.audio-player .audio__play-start {\r\n  margin: 0 16px;\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.audio-player .audio__play-start svg {\r\n  display: block;\r\n  width: 42px;\r\n  height: 42px;\r\n}\r\n\r\n.audio-player .audio__play-pause {\r\n  margin: 0 16px;\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.audio-player .audio__play-pause svg {\r\n  display: block;\r\n  width: 42px;\r\n  height: 42px;\r\n}\r\n\r\n.audio-player .audio__play-next {\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.audio-player .audio__play-next svg {\r\n  display: block;\r\n  width: 21px;\r\n  height: 33px;\r\n}\r\n\r\n.audio-player .audio__play-next.disable {\r\n  opacity: 0.5;\r\n}\r\n\r\n.audio__notice {\r\n  position: absolute;\r\n  bottom: -15px;\r\n  color: rgb(189, 178, 178);\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n.audio-player .audio__progress-wrap {\r\n  position: relative;\r\n  background: #ddd;\r\n  height: 4px;\r\n  border-radius: 3px;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.audio-player .audio__progress {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 0;\r\n  border-radius: 3px;\r\n}\r\n\r\n.audio-player .audio__progress-point {\r\n  position: absolute;\r\n  left: -8px;\r\n  top: 50%;\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  margin-top: -8px;\r\n}\r\n\r\n.audio-player .audio__progress-point:after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 6px;\r\n  height: 6px;\r\n  margin: -3px 0 0 -3px;\r\n  background: #fff;\r\n  border-radius: 50%;\r\n}\r\n\r\n.audio-player .audio__time-wrap {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-top: 7px;\r\n}\r\n\r\n.audio-player .audio__current-time {\r\n  font-size: 10px;\r\n  color: #888;\r\n}\r\n\r\n.audio-player .audio__duration {\r\n  font-size: 10px;\r\n  color: #888;\r\n}\r\n\r\n.audio-player .audio-player__audio {\r\n  display: block;\r\n  margin: 0 auto;\r\n}\r\n\r\n@media (any-hover: hover) {\r\n  .audio-player .audio__play-rate:hover > span {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .audio-player .audio__play-rate__dropdown > div:hover,\r\n  .audio__play-icon:hover {\r\n    opacity: 0.7;\r\n  }\r\n}\r\n\r\n.audio__play-loading {\r\n  width: 42px;\r\n  height: 42px;\r\n  position: relative;\r\n  margin: 0 16px;\r\n}\r\n\r\n.audio__play-loading span {\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  animation: loading 1.04s ease infinite;\r\n}\r\n\r\n@keyframes loading {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0.2;\r\n  }\r\n}\r\n\r\n.audio__play-loading span:nth-child(1) {\r\n  left: 0;\r\n  top: 50%;\r\n  margin-top: -4px;\r\n  animation-delay: 0.13s;\r\n}\r\n.audio__play-loading span:nth-child(2) {\r\n  left: 7px;\r\n  top: 7px;\r\n  animation-delay: 0.26s;\r\n}\r\n.audio__play-loading span:nth-child(3) {\r\n  left: 50%;\r\n  top: 0;\r\n  margin-left: -4px;\r\n  animation-delay: 0.39s;\r\n}\r\n.audio__play-loading span:nth-child(4) {\r\n  top: 7px;\r\n  right: 7px;\r\n  animation-delay: 0.52s;\r\n}\r\n.audio__play-loading span:nth-child(5) {\r\n  right: 0;\r\n  top: 50%;\r\n  margin-top: -4px;\r\n  animation-delay: 0.65s;\r\n}\r\n.audio__play-loading span:nth-child(6) {\r\n  right: 7px;\r\n  bottom: 7px;\r\n  animation-delay: 0.78s;\r\n}\r\n.audio__play-loading span:nth-child(7) {\r\n  bottom: 0;\r\n  left: 50%;\r\n  margin-left: -4px;\r\n  animation-delay: 0.91s;\r\n}\r\n.audio__play-loading span:nth-child(8) {\r\n  bottom: 7px;\r\n  left: 7px;\r\n  animation-delay: 1.04s;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}