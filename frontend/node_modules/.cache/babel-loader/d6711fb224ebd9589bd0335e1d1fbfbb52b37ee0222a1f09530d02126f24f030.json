{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-aae30ed8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  id: \"burger-table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"burger-table-heading\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"order-id\"\n}, \"#:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Pão:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Carne:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Opcionais:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Ações:\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"burger-table-rows\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"order-number\"\n};\nconst _hoisted_5 = [\"onChange\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Selecione\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"value\", \"selected\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Message = _resolveComponent(\"Message\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.burgers ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_withDirectives(_createVNode(_component_Message, {\n    msg: $data.msg\n  }, null, 8 /* PROPS */, [\"msg\"]), [[_vShow, $data.msg]])]), _hoisted_2])) : _createCommentVNode(\"v-if\", true), _hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.burgers, burger => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"burger-table-row\",\n      key: burger.id\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(burger.id), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(burger.nome), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(burger.pao), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(burger.carne), 1 /* TEXT */), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(burger.opcionais, (opcional, index) => {\n      return _openBlock(), _createElementBlock(\"ul\", {\n        ul: \"\",\n        key: index\n      }, [_createElementVNode(\"li\", null, _toDisplayString(opcional), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [_createElementVNode(\"select\", {\n      name: \"status\",\n      class: \"status\",\n      onChange: $event => $options.updateBurger($event, burger.id)\n    }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.status, s => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: s.id,\n        value: s.tipo,\n        selected: burger.status == s.tipo\n      }, _toDisplayString(s.tipo), 9 /* TEXT, PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5), _createElementVNode(\"button\", {\n      class: \"delete-btn\",\n      onClick: $event => $options.deleteBurger(burger.id)\n    }, \"Cancelar\", 8 /* PROPS */, _hoisted_8)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;EACSA,EAAE,EAAC;;gEAIJC,oBAMM;EANDD,EAAE,EAAC;AAAsB,iBACtBC,oBAA8B;EAAzBC,KAAK,EAAC;AAAU,GAAC,IAAE,gBACxBD,oBAAe,aAAV,MAAI,gBACTA,oBAAiB,aAAZ,QAAM,gBACXA,oBAAqB,aAAhB,YAAU,gBACfA,oBAAiB,aAAZ,QAAM;gEAGvBA,oBAAkC;EAA7BD,EAAE,EAAC;AAAmB;;EAGdE,KAAK,EAAC;AAAc;;gEAYjBD,oBAAmC;EAA3BE,KAAK,EAAC;AAAE,GAAC,WAAS;;;;;6DA3BbC,aAAO,kBAApCC,oBAWM,OAXNC,UAWM,GAVFL,oBAEM,8BADFM,aAAkCC;IAAxBC,GAAG,EAAEL;EAAG,4CAAUA,SAAG,OAEnCM,UAMM,yCAEVC,UAAkC,qBAC9BN,oBAqBMO,6BArByCR,aAAO,EAAjBS,MAAM;yBAA3CR,oBAqBM;MArBDH,KAAK,EAAC,kBAAkB;MAA4BY,GAAG,EAAED,MAAM,CAACb;QAEjEC,oBAA+C,OAA/Cc,UAA+C,mBAAlBF,MAAM,CAACb,EAAE,kBACtCC,oBAA4B,8BAApBY,MAAM,CAACG,IAAI,kBACnBf,oBAA2B,8BAAnBY,MAAM,CAACI,GAAG,kBAClBhB,oBAA6B,8BAArBY,MAAM,CAACK,KAAK,kBACpBjB,oBAIM,iCAHFI,oBAEKO,6BAF8BC,MAAM,CAACM,SAAS,GAApCC,QAAQ,EAAEC,KAAK;2BAA9BhB,oBAEK;QAFDiB,EAAE,EAAF,EAAE;QAAgDR,GAAG,EAAEO;UACvDpB,oBAAuB,6BAAhBmB,QAAQ;sCAIvBnB,oBAQM,cAPFA,oBAKS;MALDsB,IAAI,EAAC,QAAQ;MAACrB,KAAK,EAAC,QAAQ;MAAEsB,QAAM,YAAEC,qBAAY,CAACC,MAAM,EAACb,MAAM,CAACb,EAAE;QACvE2B,UAAmC,qBACnCtB,oBAESO,6BAFWR,YAAM,EAAXwB,CAAC;2BAAhBvB,oBAES;QAFoBS,GAAG,EAAEc,CAAC,CAAC5B,EAAE;QAAGG,KAAK,EAAEyB,CAAC,CAACC,IAAI;QAAGC,QAAQ,EAAEjB,MAAM,CAACkB,MAAM,IAAIH,CAAC,CAACC;0BAC/ED,CAAC,CAACC,IAAI;kFAGjB5B,oBAA6E;MAArEC,KAAK,EAAC,YAAY;MAAE8B,OAAK,YAAEP,qBAAY,CAACZ,MAAM,CAACb,EAAE;OAAG,UAAQ","names":["id","_createElementVNode","class","value","$data","_createElementBlock","_hoisted_1","_createVNode","_component_Message","msg","_hoisted_2","_hoisted_3","_Fragment","burger","key","_hoisted_4","nome","pao","carne","opcionais","opcional","index","ul","name","onChange","$options","$event","_hoisted_6","s","tipo","selected","status","onClick"],"sourceRoot":"","sources":["C:\\app\\projects\\Fullstack\\treinamento_vue_3\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n    <div id=\"burger-table\" v-if=\"burgers\">\r\n        <div>\r\n            <Message :msg=\"msg\" v-show=\"msg\"/>\r\n        </div>\r\n        <div id=\"burger-table-heading\">\r\n                <div class=\"order-id\">#:</div>\r\n                <div>Pão:</div>\r\n                <div>Carne:</div>\r\n                <div>Opcionais:</div>\r\n                <div>Ações:</div>\r\n        </div>\r\n    </div>   \r\n    <div id=\"burger-table-rows\"></div>    \r\n        <div class=\"burger-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\r\n        \r\n            <div class=\"order-number\"> {{burger.id}} </div>\r\n            <div>{{ burger.nome }}</div>\r\n            <div>{{ burger.pao }}</div>\r\n            <div>{{ burger.carne }}</div>\r\n            <div>\r\n                <ul ul v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\r\n                    <li>{{ opcional }}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div> \r\n                <select name=\"status\" class=\"status\" @change=\"updateBurger($event,burger.id)\">\r\n                    <option value=\"\">Selecione</option>\r\n                    <option v-for=\"s in status\" :key=\"s.id\" :value=\"s.tipo\" :selected=\"burger.status == s.tipo\">\r\n                        {{ s.tipo }}\r\n                    </option>\r\n                </select>\r\n                <button class=\"delete-btn\" @click=\"deleteBurger(burger.id)\">Cancelar</button>\r\n            </div>\r\n        </div>\r\n\r\n</template>\r\n<script>\r\nimport Message from './Message.vue';\r\n\r\nexport default {\r\n    name: \"Dashboard\",\r\n\r\n    data() {\r\n        return {\r\n            burgers: null,\r\n            burger_id: null,\r\n            status: [],\r\n            msg: null\r\n        };\r\n\r\n    },\r\n    \r\n    components: {\r\n        Message\r\n    },\r\n\r\n    methods: {\r\n        async getPedidos() {\r\n            \r\n            \r\n            const req = await fetch(\"http://localhost:9090/backend/v1/pedidos\");\r\n\r\n            const data = await req.json();\r\n\r\n            this.burgers = data;\r\n            \r\n\r\n            // resgatar os status\r\n            this.getStatus();\r\n        },\r\n        \r\n        async getStatus() {\r\n            const req = await fetch(\"http://localhost:9090/backend/v1/status/listar\");\r\n            \r\n            const data = await req.json();\r\n\r\n            this.status = data;  \r\n        \r\n        },\r\n        async deleteBurger(id) {\r\n\r\n            const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n            method: \"DELETE\"\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            \r\n\r\n            // colocar uma msg de sistema\r\n            this.msg = `Pedido removido com sucesso!`;\r\n\r\n            // limpar msg\r\n            setTimeout(() => this.msg = \"\",5000);\r\n\r\n            this.getPedidos();\r\n\r\n\r\n        },\r\n        async updateBurger(event,id) {\r\n\r\n            const option = event.target.value;\r\n\r\n            const dataJson =JSON.stringify({status:option});\r\n\r\n            const req = await fetch (`http://localhost:3000/burgers/${id}`, {\r\n                method: \"PATCH\",\r\n                headers: { \"Content-Type\" : \"application/json\"},\r\n                body: dataJson\r\n            })\r\n\r\n                const res = await req.json();\r\n\r\n                // colocar uma msg de sistema\r\n                this.msg = `O pedido Nº ${ res.id} foi atualizado`;\r\n\r\n                // limpar msg\r\n                setTimeout(() => this.msg = \"\",5000);                                                                                                                                                                                                    \r\n                \r\n                console.log(res);\r\n        }\r\n    \r\n    },\r\n    mounted() {\r\n        this.getPedidos();\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    #burger-table {\r\n        max-width: 1200px;  \r\n        margin: 0 auto; \r\n    }\r\n    #burger-table-heading,\r\n    #burger-table-rows,\r\n    .burger-table-row {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n    #burger-table-heading {\r\n        font-weight: bold;\r\n        padding: 12px;\r\n        border-bottom: 3px solid #333;\r\n    }\r\n\r\n    #burger-table-heading div,\r\n    .burger-table-row div {\r\n        width:19%;\r\n    }\r\n    .burger-table-row {\r\n        width: 100%;\r\n        padding: 12px;\r\n    border-bottom: 1px solid #CCC;\r\n        }\r\n\r\n        #burger-table-heading .order-id,\r\n        .burger-table-row .order-number {\r\n            width: 5%;\r\n        }\r\n        select {\r\n            padding: 12px 6px;\r\n            margin-right: 12px;\r\n        }\r\n        .delete-btn {\r\n            background-color: #222;\r\n            color: #fcba03;\r\n            font-weight: bold;\r\n            border: 2px solid #222;\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            margin: 0 auto;\r\n            cursor: pointer;\r\n            transition: .5s;\r\n        }\r\n        .delete-btn:hover {\r\n            background-color: transparent;\r\n            color:#222\r\n        }   \r\n    \r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}