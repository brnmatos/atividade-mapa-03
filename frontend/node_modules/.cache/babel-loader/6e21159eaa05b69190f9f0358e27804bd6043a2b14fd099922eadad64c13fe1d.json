{"ast":null,"code":"import { getVisualizacaoProduto } from '@/services/ComprarService.js';\nexport default {\n  name: 'produto-visualizar',\n  components: {},\n  data() {\n    return {\n      idProduto: 0,\n      produto: {},\n      statusEmpresa: [],\n      totalContratosOriginacao: {\n        totalContratosOriginacao: null,\n        totalImoveis: null,\n        totalVolumeEstimado: null,\n        totalVolumeEntregue: null\n      },\n      contratosTabela: [],\n      paginacao: {},\n      params: {\n        page: 0,\n        size: 20,\n        sort: 'statusSubEmpresa',\n        por: 'desc'\n      },\n      filtro: {\n        numeroContrato: '',\n        idsCultura: [],\n        idsSafra: [],\n        codigosStatus: [],\n        dataContrato: ''\n      },\n      skeletonBlocoInforDados: true,\n      CheckListagemContratoErro: false,\n      selectedFile: null,\n      imageUrl: null\n    };\n  },\n  methods: {\n    filtrarProdutosView() {\n      getVisualizacaoProduto(this.idProduto).then(response => {\n        console.log('Resposta do serviço:', response); // Verifica a resposta completa\n\n        if (response) {\n          this.produto = response;\n          console.log('Produtos:', this.produto); // Verifica se os produtos foram atribuídos corretamente\n        } else {\n          console.error('Resposta do serviço não possui dados esperados.');\n        }\n      }).catch(error => {\n        console.error('Erro ao filtrar produtos:', error);\n      });\n    },\n    handleFileInputChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imageUrl = URL.createObjectURL(this.selectedFile);\n    },\n    // Função para enviar a imagem para o backend\n    enviarEmailDeCompra() {\n      // Cria um objeto FormData\n      let formData = new FormData();\n      // Adiciona a imagem ao objeto FormData\n      formData.append('imagem', selectedFile);\n      enviarImagem(formData, produto.id).then(response => {\n        console.log('Imagem enviada com sucesso para o backend:', response);\n        // Faça algo com a resposta, se necessário\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n        // Faça algo com o erro, se necessário\n      });\n    },\n    uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecione um arquivo.');\n        return;\n      }\n    }\n  },\n  mounted() {\n    this.idProduto = this.$route.params.idProduto;\n    console.log('idProduto:', this.idProduto);\n    this.filtrarProdutosView();\n  }\n};","map":{"version":3,"mappings":"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","names":["getVisualizacaoProduto","name","components","data","idProduto","produto","statusEmpresa","totalContratosOriginacao","totalImoveis","totalVolumeEstimado","totalVolumeEntregue","contratosTabela","paginacao","params","page","size","sort","por","filtro","numeroContrato","idsCultura","idsSafra","codigosStatus","dataContrato","skeletonBlocoInforDados","CheckListagemContratoErro","selectedFile","imageUrl","methods","filtrarProdutosView","then","response","console","log","error","catch","handleFileInputChange","event","target","files","URL","createObjectURL","enviarEmailDeCompra","formData","FormData","append","enviarImagem","id","uploadImage","alert","mounted","$route"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\views\\ProdutoView.vue"],"sourcesContent":["<template>\r\n\r\n<div id=\"app\">\r\n  <div class=\"produto\">\r\n    <div class=\"imagem\">\r\n      <img :src=\"'data:image/jpeg;base64,' + produto.imagem\" alt=\"Imagem do Produto\">\r\n    </div>\r\n    <div class=\"info-produto\">\r\n      <div class=\"nome\">{{ produto.nomeProduto }}</div>\r\n      <div class=\"descricao\">{{ produto.descricaoProduto }}</div>\r\n      <div class=\"valor\">R$ {{ produto.valorProduto }}</div>\r\n      <div class=\"vendedor-info\">\r\n        <div class=\"vendedor\">Vendedor: {{ produto.nomeUsuarioVendedor }}</div>\r\n        <div class=\"email\">E-mail: {{ produto.emailUsuarioVendedor }}</div>\r\n      </div>\r\n      <button class=\"comprar\">Comprar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport {getVisualizacaoProduto} from '@/services/ComprarService.js';\r\n\r\nexport default {\r\n  name: 'produto-visualizar',\r\n  components: {\r\n  },\r\n  data() {\r\n        return {\r\n            idProduto: 0,\r\n            produto: {},\r\n            statusEmpresa: [],\r\n            totalContratosOriginacao: {\r\n                totalContratosOriginacao: null,\r\n                totalImoveis: null,\r\n                totalVolumeEstimado: null,\r\n                totalVolumeEntregue: null\r\n            },\r\n            contratosTabela: [],\r\n            paginacao: {},\r\n            params: {\r\n                page: 0,\r\n                size: 20,\r\n                sort: 'statusSubEmpresa',\r\n                por: 'desc'\r\n            },\r\n            filtro: {\r\n                numeroContrato: '',\r\n                idsCultura: [],\r\n                idsSafra: [],\r\n                codigosStatus: [],\r\n                dataContrato: ''\r\n            },\r\n            skeletonBlocoInforDados: true,\r\n            CheckListagemContratoErro: false,\r\n            selectedFile: null,\r\n            imageUrl: null\r\n        };\r\n    },\r\n    methods: {\r\n      filtrarProdutosView() {\r\n        getVisualizacaoProduto(this.idProduto)\r\n            .then(response => {\r\n                console.log('Resposta do serviço:', response); // Verifica a resposta completa\r\n\r\n                if (response) {\r\n                    this.produto = response;\r\n                    console.log('Produtos:', this.produto); // Verifica se os produtos foram atribuídos corretamente\r\n                } else {\r\n                    console.error('Resposta do serviço não possui dados esperados.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao filtrar produtos:', error);\r\n            });\r\n        },\r\n\r\n      handleFileInputChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.imageUrl = URL.createObjectURL(this.selectedFile);\r\n      },\r\n\r\n      // Função para enviar a imagem para o backend\r\n      enviarEmailDeCompra(){\r\n          // Cria um objeto FormData\r\n          let formData = new FormData();\r\n          // Adiciona a imagem ao objeto FormData\r\n          formData.append('imagem', selectedFile);\r\n\r\n          enviarImagem(formData, produto.id).then(response => {\r\n              console.log('Imagem enviada com sucesso para o backend:', response);\r\n              // Faça algo com a resposta, se necessário\r\n          })\r\n          .catch(error => {\r\n              console.error('Erro ao enviar imagem para o backend:', error);\r\n              // Faça algo com o erro, se necessário\r\n          });\r\n      },\r\n\r\n      uploadImage() {\r\n        if (!this.selectedFile) {\r\n          alert('Por favor, selecione um arquivo.');\r\n          return;\r\n        }\r\n    }\r\n  },\r\n  mounted(){\r\n    this.idProduto = this.$route.params.idProduto;\r\n    console.log('idProduto:', this.idProduto);\r\n    this.filtrarProdutosView();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n#app {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n\r\n.produto {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 80%;\r\n  max-width: 1200px;\r\n}\r\n\r\n.imagem {\r\n  flex: 0 0 50%;\r\n  max-width: 50%;\r\n  position: relative;\r\n}\r\n\r\n.imagem img {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.info-produto {\r\n  flex: 0 0 50%;\r\n  max-width: 50%;\r\n  padding-left: 20px;\r\n}\r\n\r\n.nome {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.descricao {\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.valor {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.vendedor-info {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.vendedor,\r\n.email {\r\n  font-size: 16px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.comprar {\r\n  background-color: #28a745;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.comprar:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}