{"ast":null,"code":"import { defineComponent, computed, reactive, toRefs, provide, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, renderSlot, createCommentVNode, Fragment, renderList, normalizeStyle, toDisplayString, createBlock, withKeys, vModelText, resolveDynamicComponent, vShow, createSlots, normalizeProps, guardReactiveProps } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../directives/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { SelectProps } from './defaults.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { isArray } from '@vue/shared';\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside\n  },\n  props: SelectProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n  setup(props, {\n    emit\n  }) {\n    const modelValue = computed(() => {\n      const {\n        modelValue: rawModelValue,\n        multiple\n      } = props;\n      const fallback = multiple ? [] : void 0;\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback;\n      }\n      return multiple ? fallback : rawModelValue;\n    });\n    const API = useSelect(reactive({\n      ...toRefs(props),\n      modelValue\n    }), emit);\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue\n      }),\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    return {\n      ...API,\n      modelValue\n    };\n  }\n});\nconst _hoisted_1 = [\"id\", \"autocomplete\", \"aria-expanded\", \"aria-label\", \"disabled\", \"readonly\", \"name\"];\nconst _hoisted_2 = [\"textContent\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelect.b(), _ctx.nsSelect.m(_ctx.selectSize)]),\n    onMouseenter: _cache[14] || (_cache[14] = $event => _ctx.states.inputHovering = true),\n    onMouseleave: _cache[15] || (_cache[15] = $event => _ctx.states.inputHovering = false),\n    onClick: _cache[16] || (_cache[16] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"prevent\", \"stop\"]))\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropdownMenuVisible,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": _ctx.fallbackPlacements,\n    effect: _ctx.effect,\n    placement: _ctx.placement,\n    pure: \"\",\n    transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleMenuEnter,\n    onHide: _cache[13] || (_cache[13] = $event => _ctx.states.isBeforeHide = false)\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", {\n      ref: \"wrapperRef\",\n      class: normalizeClass([_ctx.nsSelect.e(\"wrapper\"), _ctx.nsSelect.is(\"focused\", _ctx.isFocused), _ctx.nsSelect.is(\"hovering\", _ctx.states.inputHovering), _ctx.nsSelect.is(\"filterable\", _ctx.filterable), _ctx.nsSelect.is(\"disabled\", _ctx.selectDisabled)])\n    }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"prefixRef\",\n      class: normalizeClass(_ctx.nsSelect.e(\"prefix\"))\n    }, [renderSlot(_ctx.$slots, \"prefix\")], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n      ref: \"selectionRef\",\n      class: normalizeClass([_ctx.nsSelect.e(\"selection\"), _ctx.nsSelect.is(\"near\", _ctx.multiple && !_ctx.$slots.prefix && !!_ctx.modelValue.length)])\n    }, [_ctx.multiple ? renderSlot(_ctx.$slots, \"tag\", {\n      key: 0\n    }, () => [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.showTagList, item => {\n      return openBlock(), createElementBlock(\"div\", {\n        key: _ctx.getValueKey(_ctx.getValue(item)),\n        class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !_ctx.getDisabled(item),\n        size: _ctx.collapseTagSize,\n        type: _ctx.tagType,\n        \"disable-transitions\": \"\",\n        style: normalizeStyle(_ctx.tagStyle),\n        onClose: $event => _ctx.deleteTag($event, item)\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n        }, toDisplayString(_ctx.getLabel(item)), 3)]),\n        _: 2\n      }, 1032, [\"closable\", \"size\", \"type\", \"style\", \"onClose\"])], 2);\n    }), 128)), _ctx.collapseTags && _ctx.modelValue.length > _ctx.maxCollapseTags ? (openBlock(), createBlock(_component_el_tooltip, {\n      key: 0,\n      ref: \"tagTooltipRef\",\n      disabled: _ctx.dropdownMenuVisible || !_ctx.collapseTagsTooltip,\n      \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n      effect: _ctx.effect,\n      placement: \"bottom\",\n      teleported: _ctx.teleported\n    }, {\n      default: withCtx(() => [createElementVNode(\"div\", {\n        ref: \"collapseItemRef\",\n        class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: _ctx.tagType,\n        style: normalizeStyle(_ctx.collapseTagStyle),\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n        }, \" + \" + toDisplayString(_ctx.modelValue.length - _ctx.maxCollapseTags), 3)]),\n        _: 1\n      }, 8, [\"size\", \"type\", \"style\"])], 2)]),\n      content: withCtx(() => [createElementVNode(\"div\", {\n        ref: \"tagMenuRef\",\n        class: normalizeClass(_ctx.nsSelect.e(\"selection\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.collapseTagList, selected => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: _ctx.getValueKey(_ctx.getValue(selected)),\n          class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n        }, [createVNode(_component_el_tag, {\n          class: \"in-tooltip\",\n          closable: !_ctx.selectDisabled && !_ctx.getDisabled(selected),\n          size: _ctx.collapseTagSize,\n          type: _ctx.tagType,\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n          }, toDisplayString(_ctx.getLabel(selected)), 3)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"type\", \"onClose\"])], 2);\n      }), 128))], 2)]),\n      _: 1\n    }, 8, [\"disabled\", \"effect\", \"teleported\"])) : createCommentVNode(\"v-if\", true)]) : createCommentVNode(\"v-if\", true), !_ctx.selectDisabled ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      class: normalizeClass([_ctx.nsSelect.e(\"selected-item\"), _ctx.nsSelect.e(\"input-wrapper\"), _ctx.nsSelect.is(\"hidden\", !_ctx.filterable)])\n    }, [withDirectives(createElementVNode(\"input\", {\n      id: _ctx.inputId,\n      ref: \"inputRef\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.states.inputValue = $event),\n      style: normalizeStyle(_ctx.inputStyle),\n      autocomplete: _ctx.autocomplete,\n      \"aria-autocomplete\": \"list\",\n      \"aria-haspopup\": \"listbox\",\n      autocapitalize: \"off\",\n      \"aria-expanded\": _ctx.expanded,\n      \"aria-label\": _ctx.ariaLabel,\n      class: normalizeClass([_ctx.nsSelect.e(\"input\"), _ctx.nsSelect.is(_ctx.selectSize)]),\n      disabled: _ctx.selectDisabled,\n      role: \"combobox\",\n      readonly: !_ctx.filterable,\n      spellcheck: \"false\",\n      type: \"text\",\n      name: _ctx.name,\n      onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onBlur: _cache[2] || (_cache[2] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n      onInput: _cache[3] || (_cache[3] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n      onCompositionstart: _cache[4] || (_cache[4] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n      onCompositionupdate: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n      onCompositionend: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n      onKeydown: [_cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"])), _cache[11] || (_cache[11] = withKeys(withModifiers((...args) => _ctx.handleDel && _ctx.handleDel(...args), [\"stop\"]), [\"delete\"]))],\n      onClick: _cache[12] || (_cache[12] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"]))\n    }, null, 46, _hoisted_1), [[vModelText, _ctx.states.inputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      ref: \"calculatorRef\",\n      \"aria-hidden\": \"true\",\n      class: normalizeClass(_ctx.nsSelect.e(\"input-calculator\")),\n      textContent: toDisplayString(_ctx.states.inputValue)\n    }, null, 10, _hoisted_2)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"div\", {\n      key: 2,\n      class: normalizeClass([_ctx.nsSelect.e(\"selected-item\"), _ctx.nsSelect.e(\"placeholder\"), _ctx.nsSelect.is(\"transparent\", !_ctx.hasModelValue || _ctx.expanded && !_ctx.states.inputValue)])\n    }, [createElementVNode(\"span\", null, toDisplayString(_ctx.currentPlaceholder), 1)], 2)) : createCommentVNode(\"v-if\", true)], 2), createElementVNode(\"div\", {\n      ref: \"suffixRef\",\n      class: normalizeClass(_ctx.nsSelect.e(\"suffix\"))\n    }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsInput.e(\"icon\")]),\n      onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 2,\n      class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\")])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)]),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, createSlots({\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      _: 2\n    }, [_ctx.$slots.header ? {\n      name: \"header\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"header\"))\n      }, [renderSlot(_ctx.$slots, \"header\")], 2)])\n    } : void 0, _ctx.$slots.loading && _ctx.loading ? {\n      name: \"loading\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"loading\"))\n      }, [renderSlot(_ctx.$slots, \"loading\")], 2)])\n    } : _ctx.loading || _ctx.filteredOptions.length === 0 ? {\n      name: \"empty\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n      }, [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.emptyText), 1)])], 2)])\n    } : void 0, _ctx.$slots.footer ? {\n      name: \"footer\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"footer\"))\n      }, [renderSlot(_ctx.$slots, \"footer\")], 2)])\n    } : void 0]), 1032, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"fallback-placements\", \"effect\", \"placement\", \"transition\", \"persistent\", \"onBeforeShow\"])], 34)), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"select.vue\"]]);\nexport { Select as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","props","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","computed","modelValue","multiple","rawModelValue","fallback","useSelect","reactive","toRefs","provide","selectV2InjectionKey","height","API","tooltipRef","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","_createElementBlock","ref","class","_normalizeClass","b","m","_ctx","onMouseenter","_cache","inputHovering","onMouseleave","onClick","_createVNode","visible","teleported","effect","placement","pure","transition","namespace","trigger","persistent","onBeforeShow","onHide","isBeforeHide","default","_withCtx","_createElementVNode","e","is","prefix","key","_renderSlot","item","closable","size","type","style","_normalizeStyle","onClose","length","_createBlock","disabled","content","selected","id","inputValue","autocomplete","autocapitalize","role","readonly","spellcheck","onFocus","onBlur","onInput","onCompositionstart","onCompositionupdate","onCompositionend","onKeydown","textContent","_openBlock","_resolveDynamicComponent","_withModifiers","data","width","scope","fn","be","loading"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n    @click.prevent.stop=\"toggleMenu\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot v-if=\"multiple\" name=\"tag\">\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    {{ getLabel(item) }}\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          {{ getLabel(selected) }}\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              v-if=\"!selectDisabled\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <span>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\">\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\">\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { SelectProps } from './defaults'\nimport { selectV2InjectionKey } from './token'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return {\n      ...API,\n      modelValue,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}