{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\"), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";gCAIMA,oBAAc,YAAV,OAAK;;;EAIOC,KAAmB,EAAnB;IAAA;EAAA;;;uBAPpBC,oBAUM,cARJF,oBAMM,cALJG,UAAc,kBACdH,oBAAsE;IAA/DI,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,UAAU;+DAAUC,cAAQ;IAAEC,QAAQ,EAAR;iDAAVD,cAAQ,qBAC3DN,oBAA0E;IAAnEI,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;+DAAUC,cAAQ;IAAEC,QAAQ,EAAR;iDAAVD,cAAQ,KAC/DN,oBAAqC;IAA5BQ,OAAK,yCAAEC,yCAAK;KAAE,OAAK,GACnBH,WAAK,kBAAdJ,oBAAmD,KAAnDQ,UAAmD,mBAAZJ,WAAK","names":["_createElementVNode","style","_createElementBlock","_hoisted_1","type","placeholder","$data","required","onClick","$options","_hoisted_2"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      \r\n    <div>\r\n      <h2>Login</h2>\r\n      <input type=\"text\" placeholder=\"Username\" v-model=\"username\" required>\r\n      <input type=\"password\" placeholder=\"Password\" v-model=\"password\" required>\r\n      <button @click=\"login\">Login</button>\r\n      <p v-if=\"error\" style=\"color: red;\">{{ error }}</p>\r\n    </div>\r\n\r\n  </div>        \r\n  </template>\r\n  \r\n  <script>\r\n  import { notify } from '@/services/ChatService';\r\n  import { subscribe } from '@/utils/websocket';\r\n  //import { getMyAuthority } from '@/utils/security.util';\r\n  \r\n  export default {\r\n      name: 'Login',\r\n      data() {\r\n        return {\r\n          username: '',\r\n          password: '',\r\n          error: ''\r\n        };\r\n      },\r\n      methods: {\r\n        login() {\r\n          // Simulação de login (substitua isso com sua lógica real de login)\r\n          if (this.username === 'usuario' && this.password === 'senha') {\r\n            // Redirecionar para a página de sucesso\r\n            window.location.href = '/sucesso';\r\n          } else {\r\n            this.error = 'Credenciais inválidas. Por favor, tente novamente.';\r\n          }\r\n        }\r\n      }\r\n  };\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}