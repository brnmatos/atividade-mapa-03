{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { notify } from '@/services/ChatService';\nimport { subscribe } from '@/utils/websocket';\n//import { getMyAuthority } from '@/utils/security.util';\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      //myAuthority: getMyAuthority(),\n      myAuthority: 'User',\n      myName: '',\n      messages: [],\n      newMessage: '',\n      isConnected: false\n    };\n  },\n  methods: {\n    connect() {\n      subscribe('/message.new', message => {\n        this.messages.push(message);\n      });\n      this.isConnected = true;\n    },\n    sendNewMessage() {\n      console.log('Todas as Mensagens:', this.messages);\n      notify({\n        name: this.myName,\n        authority: this.myAuthority,\n        message: this.newMessage\n      }).then(() => {\n        console.log('retorno?', this.newMessage);\n        this.messages.push(this.newMessage);\n        this.newMessage = '';\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA2BA,SAASA,MAAK,QAAS,wBAAwB;AAC/C,SAASC,SAAQ,QAAS,mBAAmB;AAC7C;;AAEA,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,IAAI,GAAE;IACF,OAAO;MACH;MACAC,WAAW,EAAE,MAAM;MACnBC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,OAAO,GAAE;MACLT,SAAS,CAAC,cAAc,EAAGU,OAAO,IAAK;QACnC,IAAI,CAACL,QAAQ,CAACM,IAAI,CAACD,OAAO,CAAC;MAC/B,CAAC,CAAC;MACF,IAAI,CAACH,WAAU,GAAI,IAAI;IAC3B,CAAC;IACDK,cAAc,GAAE;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACT,QAAQ,CAAC;MACjDN,MAAM,CAAC;QACHE,IAAI,EAAE,IAAI,CAACG,MAAM;QACjBW,SAAS,EAAE,IAAI,CAACZ,WAAW;QAC3BO,OAAO,EAAE,IAAI,CAACJ;MAClB,CAAC,CAAC,CAACU,IAAI,CAAC,MAAM;QACVH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACR,UAAU,CAAC;QACxC,IAAI,CAACD,QAAQ,CAACM,IAAI,CAAC,IAAI,CAACL,UAAU,CAAC;QACnC,IAAI,CAACA,UAAS,GAAI,EAAE;MACxB,CAAC,CAAC;IACN;EACJ;AACJ,CAAC","names":["notify","subscribe","name","data","myAuthority","myName","messages","newMessage","isConnected","methods","connect","message","push","sendNewMessage","console","log","authority","then"],"sourceRoot":"","sources":["C:\\app\\137-tech\\radio-web\\radio-web\\frontend\\src\\components\\Chat.vue"],"sourcesContent":["<template>\r\n<div>\r\n    \r\n        <span>Minha Authority é:</span>\r\n        <b> {{ myAuthority }} </b>\r\n\r\n        <span> Meu nome é: </span>\r\n        <input type='text' v-model='myName' :disabled='isConnected'/>\r\n        <button v-on:click=\"connect\" :disabled='isConnected'> Conectar </button>\r\n    \r\n        <br>\r\n        <br>\r\n    <div v-for=\"message in messages\">\r\n        <span> {{ message.time }} - </span> \r\n        <span>{{ message.from === myName ? 'eu' : message.from }}: </span>\r\n        <span>{{ message.content }} </span>\r\n    </div>\r\n\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <input v-model=\"newMessage\" @keypress.enter=\"sendNewMessage\" :disabled=\"!isConnected\"/>\r\n        <button click=\"sendNewMessage\" :disabled=\"!isConnected\"> Enviar </button>\r\n</div>        \r\n</template>\r\n\r\n<script>\r\nimport { notify } from '@/services/ChatService';\r\nimport { subscribe } from '@/utils/websocket';\r\n//import { getMyAuthority } from '@/utils/security.util';\r\n\r\nexport default {\r\n    name: 'Home',\r\n    data(){\r\n        return {\r\n            //myAuthority: getMyAuthority(),\r\n            myAuthority: 'User',\r\n            myName: '',\r\n            messages: [],\r\n            newMessage: '',\r\n            isConnected: false\r\n        };\r\n    }, \r\n    methods: {\r\n        connect(){\r\n            subscribe('/message.new', (message) => {\r\n                this.messages.push(message);\r\n            });\r\n            this.isConnected = true;\r\n        },\r\n        sendNewMessage(){\r\n            console.log('Todas as Mensagens:', this.messages);\r\n            notify({\r\n                name: this.myName,\r\n                authority: this.myAuthority,\r\n                message: this.newMessage\r\n            }).then(() => {\r\n                console.log('retorno?', this.newMessage);\r\n                this.messages.push(this.newMessage);\r\n                this.newMessage = '';\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}