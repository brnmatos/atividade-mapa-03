{"ast":null,"code":"import { anunciar } from '@/services/AnunciarService.js';\nexport default {\n  name: 'CadastrarProdutoView',\n  components: {},\n  data() {\n    return {\n      nomeProduto: null,\n      valorProduto: null,\n      statusEmpresa: [],\n      totalContratosOriginacao: {\n        totalContratosOriginacao: null,\n        totalImoveis: null,\n        totalVolumeEstimado: null,\n        totalVolumeEntregue: null\n      },\n      contratosTabela: [],\n      paginacao: {},\n      params: {\n        page: 0,\n        size: 20,\n        sort: 'statusSubEmpresa',\n        por: 'desc'\n      },\n      filtro: {\n        numeroContrato: '',\n        idsCultura: [],\n        idsSafra: [],\n        codigosStatus: [],\n        dataContrato: ''\n      },\n      skeletonBlocoInforDados: true,\n      CheckListagemContratoErro: false,\n      selectedFile: null,\n      imageUrl: null\n    };\n  },\n  methods: {\n    cadastrar() {\n      const modal = {\n        \"nomeProduto\": this.nomeProduto,\n        \"valorProduto\": this.valorProduto\n      };\n      this.enviarImagemParaBackend(this.selectedFile, modal).then(response => {\n        console.log('Imagem enviada com sucesso para o backend:', response);\n        // Faça algo com a resposta, se necessário\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n        // Faça algo com o erro, se necessário\n      });\n\n      /*        anunciar({\r\n                      nomeProduto: this.nomeProduto,\r\n                      valorProduto: this.valorProduto\r\n                  }).then(response => {\r\n                      console.log('Resposta do backend:', response);\r\n                      // Faça algo com a resposta, por exemplo:\r\n                      // this.respostaDoBackend = response;\r\n                  }).catch(error => {\r\n                      console.error('Erro ao processar a requisição:', error);\r\n                  });\r\n      \r\n      */\n    },\n    handleFileInputChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imageUrl = URL.createObjectURL(this.selectedFile);\n    },\n    // Função para enviar a imagem para o backend\n    enviarImagemParaBackend(selectedFile, modal) {\n      // Cria um objeto FormData\n      let formData = new FormData();\n      // Adiciona a imagem ao objeto FormData\n      formData.append('imagem', selectedFile);\n      formData.append('modal', modal);\n      // Envia a imagem para o backend usando a função anunciar\n      return anunciar(formData);\n    },\n    uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecione um arquivo.');\n        return;\n      }\n    }\n  },\n  mounted() {\n    console.log(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":"AAoBA,SAAQA,QAAQ,QAAO,+BAA8B;AAErD,eAAe;EACbC,IAAI,EAAE,sBAAsB;EAC5BC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAIA,GAAG;IACD,OAAO;MACHC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE,EAAE;MACjBC,wBAAwB,EAAE;QACtBA,wBAAwB,EAAE,IAAI;QAC9BC,YAAY,EAAE,IAAI;QAClBC,mBAAmB,EAAE,IAAI;QACzBC,mBAAmB,EAAE;MACzB,CAAC;MACDC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,CAAC,CAAC;MACbC,MAAM,EAAE;QACJC,IAAI,EAAE,CAAC;QACPC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,kBAAkB;QACxBC,GAAG,EAAE;MACT,CAAC;MACDC,MAAM,EAAE;QACJC,cAAc,EAAE,EAAE;QAClBC,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE;MAClB,CAAC;MACDC,uBAAuB,EAAE,IAAI;MAC7BC,yBAAyB,EAAE,KAAK;MAChCC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,GAAE;MAET,MAAMC,KAAI,GAAI;QACZ,aAAa,EAAE,IAAI,CAAC1B,WAAW;QAC/B,cAAc,EAAE,IAAI,CAACC;MACvB,CAAC;MAGD,IAAI,CAAC0B,uBAAuB,CAAC,IAAI,CAACL,YAAY,EAAEI,KAAK,CAAC,CAACE,IAAI,CAACC,QAAO,IAAK;QACpEC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,QAAQ,CAAC;QACnE;MACJ,CAAC,EACAG,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACG,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D;MACJ,CAAC,CAAC;;MAEV;;;;;;;;;;;AAWA;IACM,CAAC;IAEDC,qBAAqBA,CAACC,KAAK,EAAE;MAC3B,IAAI,CAACb,YAAW,GAAIa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACzC,IAAI,CAACd,QAAO,GAAIe,GAAG,CAACC,eAAe,CAAC,IAAI,CAACjB,YAAY,CAAC;IACxD,CAAC;IAED;IACAK,uBAAuBA,CAACL,YAAY,EAAEI,KAAK,EAAC;MACxC;MACA,IAAIc,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC7B;MACAD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEpB,YAAY,CAAC;MACvCkB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEhB,KAAK,CAAC;MAC/B;MACA,OAAO9B,QAAQ,CAAC4C,QAAQ,CAAC;IAC7B,CAAC;IAEDG,WAAWA,GAAG;MACZ,IAAI,CAAC,IAAI,CAACrB,YAAY,EAAE;QACtBsB,KAAK,CAAC,kCAAkC,CAAC;QACzC;MACF;IACJ;EACF,CAAC;EACDC,OAAOA,GAAE;IACPf,OAAO,CAACC,GAAG,CAAC,IAAI,CAACe,MAAM,CAACrC,MAAM,CAACsC,EAAE,CAAC;EACpC;AACF","names":["anunciar","name","components","data","nomeProduto","valorProduto","statusEmpresa","totalContratosOriginacao","totalImoveis","totalVolumeEstimado","totalVolumeEntregue","contratosTabela","paginacao","params","page","size","sort","por","filtro","numeroContrato","idsCultura","idsSafra","codigosStatus","dataContrato","skeletonBlocoInforDados","CheckListagemContratoErro","selectedFile","imageUrl","methods","cadastrar","modal","enviarImagemParaBackend","then","response","console","log","catch","error","handleFileInputChange","event","target","files","URL","createObjectURL","formData","FormData","append","uploadImage","alert","mounted","$route","id"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\views\\AnunciarView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>Anunciar</h2>\r\n    <br>\r\n    <br>\r\n    <input type=\"text\" class=\"login-input\" placeholder=\"Nome Produto\" v-model=\"nomeProduto\" required>\r\n    <input type=\"number\" class=\"login-input\" placeholder=\"Valor\" v-model=\"valorProduto\" required>\r\n    <br>\r\n    <br>\r\n    <div>\r\n      <input type=\"file\" @change=\"handleFileInputChange\" accept=\"image/*\" />\r\n      <button @click=\"uploadImage\">Upload</button>\r\n    </div>\r\n    <br>\r\n    <br>                   \r\n    <button class=\"login-button\" @click=\"cadastrar()\">Cadastrar</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {anunciar} from '@/services/AnunciarService.js'\r\n\r\nexport default {\r\n  name: 'CadastrarProdutoView',\r\n  components: {\r\n  },\r\n  data() {\r\n        return {\r\n            nomeProduto: null,\r\n            valorProduto: null,\r\n            statusEmpresa: [],\r\n            totalContratosOriginacao: {\r\n                totalContratosOriginacao: null,\r\n                totalImoveis: null,\r\n                totalVolumeEstimado: null,\r\n                totalVolumeEntregue: null\r\n            },\r\n            contratosTabela: [],\r\n            paginacao: {},\r\n            params: {\r\n                page: 0,\r\n                size: 20,\r\n                sort: 'statusSubEmpresa',\r\n                por: 'desc'\r\n            },\r\n            filtro: {\r\n                numeroContrato: '',\r\n                idsCultura: [],\r\n                idsSafra: [],\r\n                codigosStatus: [],\r\n                dataContrato: ''\r\n            },\r\n            skeletonBlocoInforDados: true,\r\n            CheckListagemContratoErro: false,\r\n            selectedFile: null,\r\n            imageUrl: null\r\n        };\r\n    },\r\n    methods: {\r\n      cadastrar(){\r\n\r\n        const modal = {\r\n          \"nomeProduto\": this.nomeProduto,\r\n          \"valorProduto\": this.valorProduto\r\n        };\r\n\r\n        \r\n        this.enviarImagemParaBackend(this.selectedFile, modal).then(response => {\r\n            console.log('Imagem enviada com sucesso para o backend:', response);\r\n            // Faça algo com a resposta, se necessário\r\n        })\r\n        .catch(error => {\r\n            console.error('Erro ao enviar imagem para o backend:', error);\r\n            // Faça algo com o erro, se necessário\r\n        });\r\n\r\n/*        anunciar({\r\n                nomeProduto: this.nomeProduto,\r\n                valorProduto: this.valorProduto\r\n            }).then(response => {\r\n                console.log('Resposta do backend:', response);\r\n                // Faça algo com a resposta, por exemplo:\r\n                // this.respostaDoBackend = response;\r\n            }).catch(error => {\r\n                console.error('Erro ao processar a requisição:', error);\r\n            });\r\n\r\n*/\r\n      },\r\n\r\n      handleFileInputChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.imageUrl = URL.createObjectURL(this.selectedFile);\r\n      },\r\n\r\n      // Função para enviar a imagem para o backend\r\n      enviarImagemParaBackend(selectedFile, modal){\r\n          // Cria um objeto FormData\r\n          let formData = new FormData();\r\n          // Adiciona a imagem ao objeto FormData\r\n          formData.append('imagem', selectedFile);\r\n          formData.append('modal', modal);\r\n          // Envia a imagem para o backend usando a função anunciar\r\n          return anunciar(formData);\r\n      },\r\n\r\n      uploadImage() {\r\n        if (!this.selectedFile) {\r\n          alert('Por favor, selecione um arquivo.');\r\n          return;\r\n        }\r\n    }\r\n  },\r\n  mounted(){\r\n    console.log(this.$route.params.id);\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.login-container {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.login-error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}