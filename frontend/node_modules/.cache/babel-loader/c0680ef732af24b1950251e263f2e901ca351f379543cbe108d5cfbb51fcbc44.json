{"ast":null,"code":"import { defineComponent, getCurrentInstance, watch, provide, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { stepsProps, stepsEmits } from './steps.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useOrderedChildren } from '../../../hooks/use-ordered-children/index.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event.mjs';\nconst __default__ = defineComponent({\n  name: \"ElSteps\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: stepsProps,\n  emits: stepsEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"steps\");\n    const {\n      children: steps,\n      addChild: addStep,\n      removeChild: removeStep\n    } = useOrderedChildren(getCurrentInstance(), \"ElStep\");\n    watch(steps, () => {\n      steps.value.forEach((instance, index) => {\n        instance.setIndex(index);\n      });\n    });\n    provide(\"ElSteps\", {\n      props,\n      steps,\n      addStep,\n      removeStep\n    });\n    watch(() => props.active, (newVal, oldVal) => {\n      emit(CHANGE_EVENT, newVal, oldVal);\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ns).b(), unref(ns).m(_ctx.simple ? \"simple\" : _ctx.direction)])\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n});\nvar Steps = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"steps.vue\"]]);\nexport { Steps as default };","map":{"version":3,"mappings":";;;;;;;;mCAcc;EACZA,IAAM;AACR;;;;;;;;;IAKM,WAAKC,aAAa,OAAO;IACzB;MACJC,QAAU;MACVC,QAAU;MACVC,WAAa;IAAA,CACX,sBAAkCC,kBAAmB,IAAI,QAAQ;IAErEC,MAAMC,OAAO,MAAM;MACjBA,MAAMC,KAAM,SAAQ,CAACC,UAAyBC,KAAkB;QAC9DD,SAASE,SAASD,KAAK;MAAA,CACxB;IAAA,CACF;IAEDE,QAAQ,WAAW;MAAEC;MAAON,KAAO;MAAAO;MAASC;IAAA,CAAY;IAExDT,MACE,MAAMO,MAAMG,MACZ,GAACC,QAAgBC,MAAmB;MAC7BC,mBAAcF,QAAQC,MAAM;IAAA,CAErC","names":["name","useNamespace","children","addChild","removeChild","getCurrentInstance","watch","steps","value","instance","index","setIndex","provide","props","addStep","removeStep","active","newVal","oldVal","emit"],"sources":["../../../../../../packages/components/steps/src/steps.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(simple ? 'simple' : direction)]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { getCurrentInstance, provide, watch } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace, useOrderedChildren } from '@element-plus/hooks'\nimport { stepsEmits, stepsProps } from './steps'\n\nimport type { StepItemState } from './item.vue'\n\ndefineOptions({\n  name: 'ElSteps',\n})\n\nconst props = defineProps(stepsProps)\nconst emit = defineEmits(stepsEmits)\n\nconst ns = useNamespace('steps')\nconst {\n  children: steps,\n  addChild: addStep,\n  removeChild: removeStep,\n} = useOrderedChildren<StepItemState>(getCurrentInstance()!, 'ElStep')\n\nwatch(steps, () => {\n  steps.value.forEach((instance: StepItemState, index: number) => {\n    instance.setIndex(index)\n  })\n})\n\nprovide('ElSteps', { props, steps, addStep, removeStep })\n\nwatch(\n  () => props.active,\n  (newVal: number, oldVal: number) => {\n    emit(CHANGE_EVENT, newVal, oldVal)\n  }\n)\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}