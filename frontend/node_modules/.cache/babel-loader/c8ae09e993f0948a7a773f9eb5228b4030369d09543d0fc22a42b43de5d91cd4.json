{"ast":null,"code":"import { getVisualizacaoProduto } from '@/services/ComprarService.js';\nexport default {\n  name: 'produto-visualizar',\n  components: {},\n  data() {\n    return {\n      nomeProduto: null,\n      valorProduto: null,\n      idProduto: 0,\n      produto: {},\n      statusEmpresa: [],\n      totalContratosOriginacao: {\n        totalContratosOriginacao: null,\n        totalImoveis: null,\n        totalVolumeEstimado: null,\n        totalVolumeEntregue: null\n      },\n      contratosTabela: [],\n      paginacao: {},\n      params: {\n        page: 0,\n        size: 20,\n        sort: 'statusSubEmpresa',\n        por: 'desc'\n      },\n      filtro: {\n        numeroContrato: '',\n        idsCultura: [],\n        idsSafra: [],\n        codigosStatus: [],\n        dataContrato: ''\n      },\n      skeletonBlocoInforDados: true,\n      CheckListagemContratoErro: false,\n      selectedFile: null,\n      imageUrl: null\n    };\n  },\n  methods: {\n    filtrarProdutosView() {\n      getVisualizacaoProduto(this.idProduto).then(response => {\n        console.log('Resposta do serviço:', response); // Verifica a resposta completa\n\n        if (response && response.itens) {\n          this.produtos = response.itens;\n          this.paginacao = response.paginacao;\n          console.log('Produtos:', this.produtos); // Verifica se os produtos foram atribuídos corretamente\n        } else {\n          console.error('Resposta do serviço não possui dados esperados.');\n        }\n      }).catch(error => {\n        console.error('Erro ao filtrar produtos:', error);\n      });\n    },\n    handleFileInputChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imageUrl = URL.createObjectURL(this.selectedFile);\n    },\n    // Função para enviar a imagem para o backend\n    enviarImagemParaBackend(selectedFile, produto) {\n      // Cria um objeto FormData\n      let formData = new FormData();\n      // Adiciona a imagem ao objeto FormData\n      formData.append('imagem', selectedFile);\n      enviarImagem(formData, produto.id).then(response => {\n        console.log('Imagem enviada com sucesso para o backend:', response);\n        // Faça algo com a resposta, se necessário\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n        // Faça algo com o erro, se necessário\n      });\n    },\n    uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecione um arquivo.');\n        return;\n      }\n    }\n  },\n  mounted() {\n    this.idProduto = this.$route.params.idProduto;\n    console.log('idProduto:', this.idProduto);\n  }\n};","map":{"version":3,"mappings":"AAaA,SAAQA,sBAAsB,QAAO,8BAA8B;AAEnE,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAIA,GAAG;IACD,OAAO;MACHC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,CAAC;MACZC,OAAO,EAAE,CAAC,CAAC;MACXC,aAAa,EAAE,EAAE;MACjBC,wBAAwB,EAAE;QACtBA,wBAAwB,EAAE,IAAI;QAC9BC,YAAY,EAAE,IAAI;QAClBC,mBAAmB,EAAE,IAAI;QACzBC,mBAAmB,EAAE;MACzB,CAAC;MACDC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,CAAC,CAAC;MACbC,MAAM,EAAE;QACJC,IAAI,EAAE,CAAC;QACPC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,kBAAkB;QACxBC,GAAG,EAAE;MACT,CAAC;MACDC,MAAM,EAAE;QACJC,cAAc,EAAE,EAAE;QAClBC,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE;MAClB,CAAC;MACDC,uBAAuB,EAAE,IAAI;MAC7BC,yBAAyB,EAAE,KAAK;MAChCC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,GAAG;MACpB/B,sBAAsB,CAAC,IAAI,CAACM,SAAS,EAChC0B,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC,EAAE;;QAE/C,IAAIA,QAAO,IAAKA,QAAQ,CAACG,KAAK,EAAE;UAC5B,IAAI,CAACC,QAAO,GAAIJ,QAAQ,CAACG,KAAK;UAC9B,IAAI,CAACtB,SAAQ,GAAImB,QAAQ,CAACnB,SAAS;UACnCoB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACE,QAAQ,CAAC,EAAE;QAC7C,OAAO;UACHH,OAAO,CAACI,KAAK,CAAC,iDAAiD,CAAC;QACpE;MACJ,CAAC,EACAC,KAAK,CAACD,KAAI,IAAK;QACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACN,CAAC;IAEHE,qBAAqBA,CAACC,KAAK,EAAE;MAC3B,IAAI,CAACb,YAAW,GAAIa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACzC,IAAI,CAACd,QAAO,GAAIe,GAAG,CAACC,eAAe,CAAC,IAAI,CAACjB,YAAY,CAAC;IACxD,CAAC;IAED;IACAkB,uBAAuBA,CAAClB,YAAY,EAAErB,OAAO,EAAC;MAC1C;MACA,IAAIwC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC7B;MACAD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAErB,YAAY,CAAC;MAEvCsB,YAAY,CAACH,QAAQ,EAAExC,OAAO,CAAC4C,EAAE,CAAC,CAACnB,IAAI,CAACC,QAAO,IAAK;QAChDC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,QAAQ,CAAC;QACnE;MACJ,CAAC,EACAM,KAAK,CAACD,KAAI,IAAK;QACZJ,OAAO,CAACI,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D;MACJ,CAAC,CAAC;IACN,CAAC;IAEDc,WAAWA,GAAG;MACZ,IAAI,CAAC,IAAI,CAACxB,YAAY,EAAE;QACtByB,KAAK,CAAC,kCAAkC,CAAC;QACzC;MACF;IACJ;EACF,CAAC;EACDC,OAAOA,GAAE;IACP,IAAI,CAAChD,SAAQ,GAAI,IAAI,CAACiD,MAAM,CAACxC,MAAM,CAACT,SAAS;IAC7C4B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC7B,SAAS,CAAC;EAC3C;AACF","names":["getVisualizacaoProduto","name","components","data","nomeProduto","valorProduto","idProduto","produto","statusEmpresa","totalContratosOriginacao","totalImoveis","totalVolumeEstimado","totalVolumeEntregue","contratosTabela","paginacao","params","page","size","sort","por","filtro","numeroContrato","idsCultura","idsSafra","codigosStatus","dataContrato","skeletonBlocoInforDados","CheckListagemContratoErro","selectedFile","imageUrl","methods","filtrarProdutosView","then","response","console","log","itens","produtos","error","catch","handleFileInputChange","event","target","files","URL","createObjectURL","enviarImagemParaBackend","formData","FormData","append","enviarImagem","id","uploadImage","alert","mounted","$route"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\views\\ProdutoView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>Visualização do Produto</h2>\r\n      <div class=\"produto\">\r\n            <img :src=\"'data:image/jpeg;base64,' + produto.imagem\" alt=\"Imagem do Produto\">\r\n            <div class=\"descricao\">{{ produto.descricaoProduto }}</div>\r\n            <div class=\"valor\">R$ {{ produto.valorProduto }}</div>\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getVisualizacaoProduto} from '@/services/ComprarService.js';\r\n\r\nexport default {\r\n  name: 'produto-visualizar',\r\n  components: {\r\n  },\r\n  data() {\r\n        return {\r\n            nomeProduto: null,\r\n            valorProduto: null,\r\n            idProduto: 0,\r\n            produto: {},\r\n            statusEmpresa: [],\r\n            totalContratosOriginacao: {\r\n                totalContratosOriginacao: null,\r\n                totalImoveis: null,\r\n                totalVolumeEstimado: null,\r\n                totalVolumeEntregue: null\r\n            },\r\n            contratosTabela: [],\r\n            paginacao: {},\r\n            params: {\r\n                page: 0,\r\n                size: 20,\r\n                sort: 'statusSubEmpresa',\r\n                por: 'desc'\r\n            },\r\n            filtro: {\r\n                numeroContrato: '',\r\n                idsCultura: [],\r\n                idsSafra: [],\r\n                codigosStatus: [],\r\n                dataContrato: ''\r\n            },\r\n            skeletonBlocoInforDados: true,\r\n            CheckListagemContratoErro: false,\r\n            selectedFile: null,\r\n            imageUrl: null\r\n        };\r\n    },\r\n    methods: {\r\n      filtrarProdutosView() {\r\n        getVisualizacaoProduto(this.idProduto)\r\n            .then(response => {\r\n                console.log('Resposta do serviço:', response); // Verifica a resposta completa\r\n\r\n                if (response && response.itens) {\r\n                    this.produtos = response.itens;\r\n                    this.paginacao = response.paginacao;\r\n                    console.log('Produtos:', this.produtos); // Verifica se os produtos foram atribuídos corretamente\r\n                } else {\r\n                    console.error('Resposta do serviço não possui dados esperados.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao filtrar produtos:', error);\r\n            });\r\n        },\r\n\r\n      handleFileInputChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.imageUrl = URL.createObjectURL(this.selectedFile);\r\n      },\r\n\r\n      // Função para enviar a imagem para o backend\r\n      enviarImagemParaBackend(selectedFile, produto){\r\n          // Cria um objeto FormData\r\n          let formData = new FormData();\r\n          // Adiciona a imagem ao objeto FormData\r\n          formData.append('imagem', selectedFile);\r\n\r\n          enviarImagem(formData, produto.id).then(response => {\r\n              console.log('Imagem enviada com sucesso para o backend:', response);\r\n              // Faça algo com a resposta, se necessário\r\n          })\r\n          .catch(error => {\r\n              console.error('Erro ao enviar imagem para o backend:', error);\r\n              // Faça algo com o erro, se necessário\r\n          });\r\n      },\r\n\r\n      uploadImage() {\r\n        if (!this.selectedFile) {\r\n          alert('Por favor, selecione um arquivo.');\r\n          return;\r\n        }\r\n    }\r\n  },\r\n  mounted(){\r\n    this.idProduto = this.$route.params.idProduto;\r\n    console.log('idProduto:', this.idProduto);\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.login-container {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.login-error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n.produtos {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n}\r\n\r\n.produto {\r\n    width: 200px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    text-align: center;\r\n}\r\n\r\n.produto img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.produto .descricao {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.produto .valor {\r\n    color: green;\r\n    font-size: 1.2em;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}