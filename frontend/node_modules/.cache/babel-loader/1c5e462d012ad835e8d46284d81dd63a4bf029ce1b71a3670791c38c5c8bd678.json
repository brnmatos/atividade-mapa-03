{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withKeys as _withKeys, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Minha Authority é:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \" Meu nome é: \", -1 /* HOISTED */);\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  class: \"time\"\n};\nconst _hoisted_5 = [\"disabled\"];\nconst _hoisted_6 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"b\", null, _toDisplayString($data.myAuthority), 1 /* TEXT */), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.myName = $event),\n    disabled: $data.isConnected\n  }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, $data.myName]]), _createTextVNode(\" button(@click=\\\"connect\\\", :disabled='isConnected') Conectar .message(v-for=\\\"message in messages\\\") \"), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_ctx.message.time) + \" - \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(_ctx.message.from === $data.myName ? 'eu' : _ctx.message.from) + \": \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(_ctx.message.content), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMessage = $event),\n    onKeypress: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendNewMessage && $options.sendNewMessage(...args), [\"enter\"])),\n    disabled: !$data.isConnected\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    click: \"sendNewMessage\",\n    disabled: !$data.isConnected\n  }, \" Enviar \", 8 /* PROPS */, _hoisted_6)]);\n}","map":{"version":3,"mappings":";gCAGQA,oBAA+B,cAAzB,oBAAkB;gCAGxBA,oBAA0B,cAApB,eAAa;;;EAKbC,KAAK,EAAC;AAAM;;;;uBAV1BC,oBAgBM,cAdEC,UAA+B,EAC/BH,oBAA0B,4BAAnBI,iBAAW,kBAElBC,UAA0B,kBAC1BL,oBAA6D;IAAtDM,IAAI,EAAC,MAAM;+DAAUF,YAAM;IAAGG,QAAQ,EAAEH;sDAAnBA,YAAM,sBAA2B,wGAI7D,uBAAgD,QAAhDI,UAAgD,mBAAzBC,YAAO,CAACC,IAAI,IAAG,KAAG,iBACzCV,oBAAkE,+BAAzDS,YAAO,CAACE,IAAI,KAAKP,YAAM,UAAUK,YAAO,CAACE,IAAI,IAAG,IAAE,iBAC3DX,oBAAmC,+BAA1BS,YAAO,CAACG,OAAO,kCAExBZ,oBAAuF;+DAAvEI,gBAAU;IAAGS,UAAQ,mDAAQC,2DAAc;IAAGP,QAAQ,GAAGH;uEAAzDA,gBAAU,KAC1BJ,oBAAyE;IAAjEe,KAAK,EAAC,gBAAgB;IAAER,QAAQ,GAAGH;KAAa,UAAQ","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","$data","_hoisted_2","type","disabled","_hoisted_4","_ctx","time","from","content","onKeypress","$options","click"],"sourceRoot":"","sources":["C:\\app\\137-tech\\radio-web\\radio-web\\frontend\\src\\components\\Chat.vue"],"sourcesContent":["<template>\r\n<div>\r\n    \r\n        <span>Minha Authority é:</span>\r\n        <b> {{ myAuthority }} </b>\r\n\r\n        <span> Meu nome é: </span>\r\n        <input type='text' v-model='myName' :disabled='isConnected'/>\r\n        button(@click=\"connect\", :disabled='isConnected') Conectar\r\n        \r\n    .message(v-for=\"message in messages\")\r\n        <span class=\"time\"> {{ message.time }} - </span> \r\n        <span>{{ message.from === myName ? 'eu' : message.from }}: </span>\r\n        <span>{{ message.content }} </span>\r\n\r\n        <input v-model=\"newMessage\" @keypress.enter=\"sendNewMessage\" :disabled=\"!isConnected\"/>\r\n        <button click=\"sendNewMessage\" :disabled=\"!isConnected\"> Enviar </button>\r\n</div>        \r\n</template>\r\n\r\n<script>\r\nimport { notify } from '@/services/ChatService';\r\nimport { subscribe } from '@/utils/websocket';\r\n//import { getMyAuthority } from '@/utils/security.util';\r\n\r\nexport default {\r\n    name: 'Home',\r\n    data(){\r\n        return {\r\n            //myAuthority: getMyAuthority(),\r\n            myAuthority: 'User',\r\n            myName: '',\r\n            messages: [],\r\n            newMessage: '',\r\n            isConnected: false\r\n        };\r\n    }, \r\n    methods: {\r\n        connect(){\r\n            subscribe('/message.new', (message) => {\r\n                this.messages.push(message);\r\n            });\r\n            this.isConnected = true;\r\n        },\r\n        sendNewMessage(){\r\n            console.log('Todas as Mensagens:', this.messages);\r\n            notify({\r\n                name: this.myName,\r\n                authority: this.myAuthority,\r\n                message: this.newMessage\r\n            }).then(() => {\r\n                console.log('retorno?', this.newMessage);\r\n                this.messages.push(this.newMessage);\r\n                this.newMessage = '';\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}