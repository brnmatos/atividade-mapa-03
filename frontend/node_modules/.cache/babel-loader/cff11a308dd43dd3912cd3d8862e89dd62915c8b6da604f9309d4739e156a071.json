{"ast":null,"code":"import { anunciar, enviarImagem } from '@/services/AnunciarService.js';\nimport { getPerfilLogado } from '@/services/login.js';\nimport Navbar from '@/components/Navbar.vue';\nexport default {\n  name: 'CadastrarProdutoView',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      nomeProduto: null,\n      valorProduto: null,\n      idUsuarioLogado: 0,\n      statusEmpresa: [],\n      totalContratosOriginacao: {\n        totalContratosOriginacao: null,\n        totalImoveis: null,\n        totalVolumeEstimado: null,\n        totalVolumeEntregue: null\n      },\n      contratosTabela: [],\n      paginacao: {},\n      params: {\n        page: 0,\n        size: 20,\n        sort: 'statusSubEmpresa',\n        por: 'desc'\n      },\n      filtro: {\n        numeroContrato: '',\n        idsCultura: [],\n        idsSafra: [],\n        codigosStatus: [],\n        dataContrato: ''\n      },\n      skeletonBlocoInforDados: true,\n      CheckListagemContratoErro: false,\n      selectedFile: null,\n      imageUrl: null,\n      logo_src: \"/img/logo.png\",\n      app_name: \"Fast - Ecommerce\",\n      tipoPerfilLogado: \"\"\n    };\n  },\n  methods: {\n    cadastrar() {\n      const modal = {\n        \"nomeProduto\": this.nomeProduto,\n        \"valorProduto\": this.valorProduto,\n        \"idUsuario\": this.idUsuarioLogado\n      };\n      anunciar(modal).then(response => {\n        const produto = response;\n        this.enviarImagemParaBackend(this.selectedFile, produto);\n      }).catch(error => {\n        console.error('Erro ao processar a requisição:', error);\n      });\n    },\n    handleFileInputChange(event) {\n      this.selectedFile = event.target.files[0];\n      this.imageUrl = URL.createObjectURL(this.selectedFile);\n    },\n    // Função para enviar a imagem para o backend\n    enviarImagemParaBackend(selectedFile, produto) {\n      // Cria um objeto FormData\n      let formData = new FormData();\n      // Adiciona a imagem ao objeto FormData\n      formData.append('imagem', selectedFile);\n      enviarImagem(formData, produto.id).then(response => {\n        // Faça algo com a resposta, se necessário\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n      });\n    },\n    uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecione um arquivo.');\n        return;\n      }\n    },\n    getPerfilLogado() {\n      getPerfilLogado(this.idUsuarioLogado).then(response => {\n        this.tipoPerfilLogado = response;\n      }).catch(error => {\n        console.error('Erro ao enviar imagem para o backend:', error);\n        // Faça algo com o erro, se necessário\n      });\n    }\n  },\n  mounted() {\n    this.idUsuarioLogado = this.$route.params.id;\n    this.getPerfilLogado();\n  }\n};","map":{"version":3,"mappings":"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","names":["anunciar","enviarImagem","getPerfilLogado","Navbar","name","components","data","nomeProduto","valorProduto","idUsuarioLogado","statusEmpresa","totalContratosOriginacao","totalImoveis","totalVolumeEstimado","totalVolumeEntregue","contratosTabela","paginacao","params","page","size","sort","por","filtro","numeroContrato","idsCultura","idsSafra","codigosStatus","dataContrato","skeletonBlocoInforDados","CheckListagemContratoErro","selectedFile","imageUrl","logo_src","app_name","tipoPerfilLogado","methods","cadastrar","modal","then","response","produto","enviarImagemParaBackend","catch","error","console","handleFileInputChange","event","target","files","URL","createObjectURL","formData","FormData","append","id","uploadImage","alert","mounted","$route"],"sourceRoot":"","sources":["C:\\app\\projects\\00-MavenProjects\\02-ecommerce-example-pos\\frontend\\src\\views\\AnunciarView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Navbar :logo=\"logo_src\" :alt=\"app_name\" :perfil=\"tipoPerfilLogado\"/>\r\n\r\n    <div class=\"login-container\">\r\n      <h2>Anunciar</h2>\r\n      <br>\r\n      <br>\r\n      <input type=\"text\" class=\"login-input\" placeholder=\"Nome Produto\" v-model=\"nomeProduto\" required>\r\n      <input type=\"number\" class=\"login-input\" placeholder=\"Valor\" v-model=\"valorProduto\" required>\r\n      <br>\r\n      <br>\r\n      <div>\r\n        <input type=\"file\" @change=\"handleFileInputChange\" accept=\"image/*\" />\r\n        <button @click=\"uploadImage\">Upload</button>\r\n      </div>\r\n      <br>\r\n      <br>                   \r\n      <button class=\"login-button\" @click=\"cadastrar()\">Cadastrar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {anunciar, enviarImagem} from '@/services/AnunciarService.js'\r\nimport {getPerfilLogado} from '@/services/login.js';\r\n\r\nimport Navbar from '@/components/Navbar.vue'\r\n\r\nexport default {\r\n  name: 'CadastrarProdutoView',\r\n  components: {\r\n    Navbar\r\n  },\r\n  data() {\r\n        return {\r\n            nomeProduto: null,\r\n            valorProduto: null,\r\n            idUsuarioLogado: 0,\r\n            statusEmpresa: [],\r\n            totalContratosOriginacao: {\r\n                totalContratosOriginacao: null,\r\n                totalImoveis: null,\r\n                totalVolumeEstimado: null,\r\n                totalVolumeEntregue: null\r\n            },\r\n            contratosTabela: [],\r\n            paginacao: {},\r\n            params: {\r\n                page: 0,\r\n                size: 20,\r\n                sort: 'statusSubEmpresa',\r\n                por: 'desc'\r\n            },\r\n            filtro: {\r\n                numeroContrato: '',\r\n                idsCultura: [],\r\n                idsSafra: [],\r\n                codigosStatus: [],\r\n                dataContrato: ''\r\n            },\r\n            skeletonBlocoInforDados: true,\r\n            CheckListagemContratoErro: false,\r\n            selectedFile: null,\r\n            imageUrl: null,\r\n            logo_src: \"/img/logo.png\",\r\n            app_name: \"Fast - Ecommerce\",\r\n            tipoPerfilLogado: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n      cadastrar(){\r\n\r\n        const modal = {\r\n          \"nomeProduto\": this.nomeProduto,\r\n          \"valorProduto\": this.valorProduto,\r\n          \"idUsuario\": this.idUsuarioLogado \r\n        };\r\n\r\n        \r\n        anunciar(modal).then(response => {\r\n                const produto = response;\r\n\r\n                this.enviarImagemParaBackend(this.selectedFile, produto);\r\n\r\n            }).catch(error => {\r\n                console.error('Erro ao processar a requisição:', error);\r\n            });\r\n\r\n      },\r\n\r\n      handleFileInputChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.imageUrl = URL.createObjectURL(this.selectedFile);\r\n      },\r\n\r\n      // Função para enviar a imagem para o backend\r\n      enviarImagemParaBackend(selectedFile, produto){\r\n          // Cria um objeto FormData\r\n          let formData = new FormData();\r\n          // Adiciona a imagem ao objeto FormData\r\n          formData.append('imagem', selectedFile);\r\n\r\n          enviarImagem(formData, produto.id).then(response => {\r\n              // Faça algo com a resposta, se necessário\r\n          })\r\n          .catch(error => {\r\n              console.error('Erro ao enviar imagem para o backend:', error);\r\n          });\r\n      },\r\n\r\n      uploadImage() {\r\n        if (!this.selectedFile) {\r\n          alert('Por favor, selecione um arquivo.');\r\n          return;\r\n        }\r\n     },\r\n      getPerfilLogado(){\r\n  \r\n        getPerfilLogado(this.idUsuarioLogado).then(response => {\r\n              this.tipoPerfilLogado = response;\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao enviar imagem para o backend:', error);\r\n                // Faça algo com o erro, se necessário\r\n            });\r\n        \r\n      }\r\n  },\r\n  mounted(){\r\n    this.idUsuarioLogado = this.$route.params.id;\r\n    this.getPerfilLogado();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.login-container {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.login-error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}