{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { checkTagProps, checkTagEmits } from './check-tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event.mjs';\nconst __default__ = defineComponent({\n  name: \"ElCheckTag\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: checkTagProps,\n  emits: checkTagEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"check-tag\");\n    const containerKls = computed(() => [ns.b(), ns.is(\"checked\", props.checked), ns.m(props.type || \"primary\")]);\n    const handleChange = () => {\n      const checked = !props.checked;\n      emit(CHANGE_EVENT, checked);\n      emit(\"update:checked\", checked);\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"span\", {\n        class: normalizeClass(unref(containerKls)),\n        onClick: handleChange\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n});\nvar CheckTag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"check-tag.vue\"]]);\nexport { CheckTag as default };","map":{"version":3,"mappings":";;;;;;;mCAYc;EACZA,IAAM;AACR;;;;;;;;;IAIM,WAAKC,aAAa,WAAW;IAC7B,qBAAeC,SAAS,MAAM,CAClCC,GAAGC,CAAE,IACLD,EAAG,IAAG,SAAW,QAAME,OAAO,GAC9BF,EAAG,GAAEG,KAAM,SAAQ,SAAS,EAC7B;IAED,MAAMC,eAAeA,MAAM;MACnB,gBAAU,CAACD,KAAM;MACvBE,KAAKC,cAAcJ,OAAO;MAC1BG,KAAK,kBAAkBH,OAAO;IAAA,CAChC","names":["name","useNamespace","computed","ns","b","checked","props","handleChange","emit","CHANGE_EVENT"],"sources":["../../../../../../packages/components/check-tag/src/check-tag.vue"],"sourcesContent":["<template>\n  <span :class=\"containerKls\" @click=\"handleChange\">\n    <slot />\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkTagEmits, checkTagProps } from './check-tag'\n\ndefineOptions({\n  name: 'ElCheckTag',\n})\nconst props = defineProps(checkTagProps)\nconst emit = defineEmits(checkTagEmits)\n\nconst ns = useNamespace('check-tag')\nconst containerKls = computed(() => [\n  ns.b(),\n  ns.is('checked', props.checked),\n  ns.m(props.type || 'primary'),\n])\n\nconst handleChange = () => {\n  const checked = !props.checked\n  emit(CHANGE_EVENT, checked)\n  emit('update:checked', checked)\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}