{"ast":null,"code":"import { defineComponent, computed, unref, withDirectives, openBlock, createElementBlock, normalizeClass, normalizeStyle, vShow, createCommentVNode, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { carouselItemProps } from './carousel-item.mjs';\nimport { useCarouselItem } from './use-carousel-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst COMPONENT_NAME = \"ElCarouselItem\";\nconst __default__ = defineComponent({\n  name: \"ElCarouselItem\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: carouselItemProps,\n  setup(__props) {\n    const props = __props;\n    const ns = useNamespace(\"carousel\");\n    const {\n      carouselItemRef,\n      active,\n      animating,\n      hover,\n      inStage,\n      isVertical,\n      translate,\n      isCardType,\n      scale,\n      ready,\n      handleItemClick\n    } = useCarouselItem(props, COMPONENT_NAME);\n    const itemKls = computed(() => [ns.e(\"item\"), ns.is(\"active\", active.value), ns.is(\"in-stage\", inStage.value), ns.is(\"hover\", hover.value), ns.is(\"animating\", animating.value), {\n      [ns.em(\"item\", \"card\")]: isCardType.value,\n      [ns.em(\"item\", \"card-vertical\")]: isCardType.value && isVertical.value\n    }]);\n    const itemStyle = computed(() => {\n      const translateType = `translate${unref(isVertical) ? \"Y\" : \"X\"}`;\n      const _translate = `${translateType}(${unref(translate)}px)`;\n      const _scale = `scale(${unref(scale)})`;\n      const transform = [_translate, _scale].join(\" \");\n      return {\n        transform\n      };\n    });\n    return (_ctx, _cache) => {\n      return withDirectives((openBlock(), createElementBlock(\"div\", {\n        ref_key: \"carouselItemRef\",\n        ref: carouselItemRef,\n        class: normalizeClass(unref(itemKls)),\n        style: normalizeStyle(unref(itemStyle)),\n        onClick: _cache[0] || (_cache[0] = (...args) => unref(handleItemClick) && unref(handleItemClick)(...args))\n      }, [unref(isCardType) ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(unref(ns).e(\"mask\"))\n      }, null, 2)), [[vShow, !unref(active)]]) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6)), [[vShow, unref(ready)]]);\n    };\n  }\n});\nvar CarouselItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"carousel-item.vue\"]]);\nexport { CarouselItem as default };","map":{"version":3,"mappings":";;;;;;;mCAqBc;EACZA,IAAM;AACR;;;;;;IAGM,WAAKC,aAAa,UAAU;IAG5B;MACJC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IAAA,CACE,mBAAgBC,OAAOC,cAAc;IAEnC,gBAAUC,SAAS,MAAM,CAC7BC,GAAGC,EAAE,MAAM,GACXD,EAAG,IAAG,QAAU,SAAOE,KAAK,GAC5BF,EAAG,IAAG,UAAY,UAAQE,KAAK,GAC/BF,EAAG,IAAG,OAAS,QAAME,KAAK,GAC1BF,EAAG,IAAG,WAAa,YAAUE,KAAK,GAClC;MACE,CAACF,EAAG,IAAG,MAAQ,QAAM,IAAIP,UAAW;MACpC,CAACO,GAAGG,EAAG,SAAQ,eAAe,CAAI,cAAWD,SAASX,UAAW;IAAA,CACnE,CACD;IAEK,kBAAYQ,SAAwB,MAAM;MAC9C,MAAMK,aAAgB,eAAYC,KAAM,WAAU,IAAI,GAAM;MAC5D,MAAMC,UAAa,MAAGF,aAAiB,UAAMZ,SAAS;MAChD,eAAkB,eAAME,KAAK;MACnC,MAAMa,YAAY,CAACD,YAAYE,MAAM,EAAEC,KAAK,GAAG;MAExC;QACLF;MAAA,CACF;IAAA,CACD","names":["name","useNamespace","carouselItemRef","active","animating","hover","inStage","isVertical","translate","isCardType","scale","ready","handleItemClick","props","COMPONENT_NAME","computed","ns","e","value","em","translateType","unref","_translate","transform","_scale","join"],"sources":["../../../../../../packages/components/carousel/src/carousel-item.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"ready\"\n    ref=\"carouselItemRef\"\n    :class=\"itemKls\"\n    :style=\"itemStyle\"\n    @click=\"handleItemClick\"\n  >\n    <div v-if=\"isCardType\" v-show=\"!active\" :class=\"ns.e('mask')\" />\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { carouselItemProps } from './carousel-item'\nimport { useCarouselItem } from './use-carousel-item'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElCarouselItem',\n})\n\nconst props = defineProps(carouselItemProps)\nconst ns = useNamespace('carousel')\nconst COMPONENT_NAME = 'ElCarouselItem'\n// inject\nconst {\n  carouselItemRef,\n  active,\n  animating,\n  hover,\n  inStage,\n  isVertical,\n  translate,\n  isCardType,\n  scale,\n  ready,\n  handleItemClick,\n} = useCarouselItem(props, COMPONENT_NAME)\n\nconst itemKls = computed(() => [\n  ns.e('item'),\n  ns.is('active', active.value),\n  ns.is('in-stage', inStage.value),\n  ns.is('hover', hover.value),\n  ns.is('animating', animating.value),\n  {\n    [ns.em('item', 'card')]: isCardType.value,\n    [ns.em('item', 'card-vertical')]: isCardType.value && isVertical.value,\n  },\n])\n\nconst itemStyle = computed<CSSProperties>(() => {\n  const translateType = `translate${unref(isVertical) ? 'Y' : 'X'}`\n  const _translate = `${translateType}(${unref(translate)}px)`\n  const _scale = `scale(${unref(scale)})`\n  const transform = [_translate, _scale].join(' ')\n\n  return {\n    transform,\n  }\n})\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}