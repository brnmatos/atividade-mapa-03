{"ast":null,"code":"import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, unref, normalizeStyle, withCtx, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../form/index.mjs';\nimport '../../../utils/index.mjs';\nimport { textProps } from './text.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nconst __default__ = defineComponent({\n  name: \"ElText\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: textProps,\n  setup(__props) {\n    const props = __props;\n    const textSize = useFormSize();\n    const ns = useNamespace(\"text\");\n    const textKls = computed(() => [ns.b(), ns.m(props.type), ns.m(textSize.value), ns.is(\"truncated\", props.truncated), ns.is(\"line-clamp\", !isUndefined(props.lineClamp))]);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n        class: normalizeClass(unref(textKls)),\n        style: normalizeStyle({\n          \"-webkit-line-clamp\": _ctx.lineClamp\n        })\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\", \"style\"]);\n    };\n  }\n});\nvar Text = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"text.vue\"]]);\nexport { Text as default };","map":{"version":3,"mappings":";;;;;;;;;mCAiBc;EACZA,IAAM;AACR;;;;;;IAIA,MAAMC,WAAWC,WAAY;IACvB,WAAKC,aAAa,MAAM;IAExB,gBAAUC,SAAS,MAAM,CAC7BC,GAAGC,CAAE,IACLD,GAAGE,CAAE,OAAMC,IAAI,GACfH,GAAGE,CAAE,UAASE,KAAK,GACnBJ,EAAG,IAAG,WAAa,QAAMK,SAAS,GAClCL,GAAGM,EAAG,eAAc,CAACC,WAAY,OAAMC,SAAS,CAAC,EAClD","names":["name","textSize","useFormSize","useNamespace","computed","ns","b","m","type","value","truncated","is","isUndefined","lineClamp"],"sources":["../../../../../../packages/components/text/src/text.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"textKls\"\n    :style=\"{ '-webkit-line-clamp': lineClamp }\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from '@element-plus/components/form'\nimport { isUndefined } from '@element-plus/utils'\nimport { textProps } from './text'\n\ndefineOptions({\n  name: 'ElText',\n})\n\nconst props = defineProps(textProps)\n\nconst textSize = useFormSize()\nconst ns = useNamespace('text')\n\nconst textKls = computed(() => [\n  ns.b(),\n  ns.m(props.type),\n  ns.m(textSize.value),\n  ns.is('truncated', props.truncated),\n  ns.is('line-clamp', !isUndefined(props.lineClamp)),\n])\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}