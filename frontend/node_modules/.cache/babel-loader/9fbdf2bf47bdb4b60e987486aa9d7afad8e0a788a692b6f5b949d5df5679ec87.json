{"ast":null,"code":"import Message from './Message';\nexport default {\n  name: \"BurgerForm\",\n  data() {\n    return {\n      paes: null,\n      carnes: null,\n      opcionaisdata: null,\n      nome: null,\n      pao: null,\n      carne: null,\n      opcionais: [],\n      status: \"Solicitado\",\n      msg: null\n    };\n  },\n  methods: {\n    async getIngredientes() {\n      const req = await fetch('http://localhost:9090/backend/v1/ingredientes');\n      const data = await req.json();\n      this.paes = data.paes;\n      this.carnes = data.carnes;\n      this.opcionaisdata = data.opcionais;\n    },\n    async createBurger(e) {\n      e.preventDefault();\n      const data = {\n        nome: this.nome,\n        carne: this.carne,\n        pao: this.pao,\n        opcionais: Array.from(this.opcionais),\n        status: \"Solicitado\"\n      };\n      const dataJson = JSON.stringify(data);\n      const req = await fetch(\"http://localhost:9090/backend/v1/pedidos/cadastrar\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n\n      // colocar uma msg de  sistema\n      this.msg = \"Pedido realizado com sucesso!\";\n      console.log(this.msg);\n      console.log(data);\n      // limpar  msg \n      setTimeout(() => this.msg = \"\", 3000);\n\n      // limpar campos\n      this.nome = \"\";\n      this.carne = \"\";\n      this.pao = \"\";\n      this.opcionais = [];\n    }\n  },\n  mounted() {\n    this.getIngredientes();\n  },\n  components: {\n    Message\n  }\n};","map":{"version":3,"mappings":"AAqCA,OAAOA,OAAM,MAAO,WAAU;AAC9B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,YAAY;MACpBC,GAAG,EAAE;IACP;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAe,GAAG;MACtB,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,+CAA+C;MACvE,MAAMb,IAAG,GAAI,MAAMY,GAAG,CAACE,IAAI,EAAC;MAC5B,IAAI,CAACb,IAAG,GAAID,IAAI,CAACC,IAAG;MACpB,IAAI,CAACC,MAAK,GAAIF,IAAI,CAACE,MAAK;MACxB,IAAI,CAACC,aAAY,GAAIH,IAAI,CAACO,SAAQ;IACpC,CAAC;IACD,MAAMQ,YAAY,CAACC,CAAC,EAAE;MACpBA,CAAC,CAACC,cAAc,EAAC;MACjB,MAAMjB,IAAG,GAAI;QACXI,IAAI,EAAE,IAAI,CAACA,IAAI;QACfE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBD,GAAG,EAAE,IAAI,CAACA,GAAG;QACbE,SAAS,EAAEW,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,SAAS,CAAC;QACrCC,MAAM,EAAE;MACV;MACA,MAAMY,QAAO,GAAIC,IAAI,CAACC,SAAS,CAACtB,IAAI;MACpC,MAAMY,GAAE,GAAI,MAAMC,KAAK,CAAC,oDAAoD,EAAE;QAC5EU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAa,EAAI;QAAmB,CAAC;QAChDC,IAAI,EAAEL;MACR,CAAC,CAAC;MACF,MAAMM,GAAE,GAAI,MAAMd,GAAG,CAACE,IAAI,EAAC;;MAE5B;MACC,IAAI,CAACL,GAAE,GAAI,+BAA8B;MACzCkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,GAAG,CAAC;MACrBkB,OAAO,CAACC,GAAG,CAAC5B,IAAI;MAChB;MACA6B,UAAU,CAAC,MAAM,IAAI,CAACpB,GAAE,GAAI,EAAE,EAAE,IAAI;;MAEpC;MACA,IAAI,CAACL,IAAG,GAAI,EAAC;MACb,IAAI,CAACE,KAAI,GAAI,EAAC;MACd,IAAI,CAACD,GAAE,GAAI,EAAC;MACZ,IAAI,CAACE,SAAQ,GAAI,EAAC;IAEpB;EACF,CAAC;EACDuB,OAAM,GAAK;IACT,IAAI,CAACnB,eAAe,EAAC;EACvB,CAAC;EACDoB,UAAU,EAAE;IACVjC;EACF;AACF","names":["Message","name","data","paes","carnes","opcionaisdata","nome","pao","carne","opcionais","status","msg","methods","getIngredientes","req","fetch","json","createBurger","e","preventDefault","Array","from","dataJson","JSON","stringify","method","headers","body","res","console","log","setTimeout","mounted","components"],"sourceRoot":"","sources":["C:\\app\\projects\\Fullstack\\treinamento_vue_3\\src\\components\\BurgerForm.vue"],"sourcesContent":["<template>\r\n  <Message :msg=\"msg\" v-show=\"msg\" />\r\n  <div>\r\n    <form id=\"burger-form\" method=\"POST\" @submit=\"createBurger\">\r\n      <div class=\"input-container\">\r\n        <label for=\"nome\">Nome do cliente:</label>\r\n        <input type=\"text\" id=\"nome\" name=\"nome\" v-model=\"nome\" placeholder=\"Digite o seu nome\">\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <label for=\"pao\">Escolha o pão:</label>\r\n        <select name=\"pao\" id=\"pao\" v-model=\"pao\">\r\n          <option value=\"\">Selecione o seu pão</option>\r\n          <option v-for=\"pao in paes\" :key=\"pao.id\" :value=\"pao.tipo\">{{ pao.tipo }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <label for=\"carne\">Escolha a carne do seu Burger:</label>\r\n        <select name=\"carne\" id=\"carne\" v-model=\"carne\">\r\n          <option value=\"\">Selecione o tipo de carne</option>\r\n          <option v-for=\"carne in carnes\" :key=\"carne.id\" :value=\"carne.tipo\">{{ carne.tipo }}</option>\r\n        </select>\r\n      </div>\r\n      <div id=\"opcionais-container\" class=\"input-container\">\r\n        <label id=\"opcionais-title\" for=\"opcionais\">Selecione os opcionais:</label>\r\n        <div class=\"checkbox-container\" v-for=\"opcional in opcionaisdata\" :key=\"opcional.id\">\r\n          <input type=\"checkbox\" name=\"opcionais\" v-model=\"opcionais\" :value=\"opcional.tipo\">\r\n          <span>{{ opcional.tipo }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input class=\"submit-btn\" type=\"submit\" value=\"Criar meu Burger!\">\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from './Message'\r\nexport default {\r\n  name: \"BurgerForm\",\r\n  data() {\r\n    return {\r\n      paes: null,\r\n      carnes: null,\r\n      opcionaisdata: null,\r\n      nome: null,\r\n      pao: null,\r\n      carne: null,\r\n      opcionais: [],\r\n      status: \"Solicitado\",\r\n      msg: null\r\n    }\r\n  },\r\n  methods: {\r\n    async getIngredientes() {\r\n      const req = await fetch('http://localhost:9090/backend/v1/ingredientes')\r\n      const data = await req.json()\r\n      this.paes = data.paes\r\n      this.carnes = data.carnes\r\n      this.opcionaisdata = data.opcionais\r\n    },\r\n    async createBurger(e) {\r\n      e.preventDefault()\r\n      const data = {\r\n        nome: this.nome,\r\n        carne: this.carne,\r\n        pao: this.pao,\r\n        opcionais: Array.from(this.opcionais),\r\n        status: \"Solicitado\"\r\n      }\r\n      const dataJson = JSON.stringify(data)    \r\n      const req = await fetch(\"http://localhost:9090/backend/v1/pedidos/cadastrar\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\" : \"application/json\" },\r\n        body: dataJson\r\n      });\r\n      const res = await req.json()\r\n\r\n     // colocar uma msg de  sistema\r\n      this.msg = \"Pedido realizado com sucesso!\" \r\n      console.log(this.msg);\r\n      console.log(data)\r\n      // limpar  msg \r\n      setTimeout(() => this.msg = \"\", 3000)\r\n      \r\n      // limpar campos\r\n      this.nome = \"\"\r\n      this.carne = \"\"\r\n      this.pao = \"\"\r\n      this.opcionais = []\r\n      \r\n    }\r\n  },\r\n  mounted () {\r\n    this.getIngredientes()\r\n  },\r\n  components: {\r\n    Message\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  #burger-form {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n  }\r\n  .input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n  }\r\n  label {\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n    color: #222;;\r\n    padding: 5px 10px;\r\n    border-left: 4px solid #fcba03;\r\n  }\r\n  input, select {\r\n    padding: 5px 10px;\r\n    width: 300px;\r\n  }\r\n  #opcionais-container {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n  #opcionais-title {\r\n    width: 100%;\r\n  }\r\n  .checkbox-container {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n  }\r\n  .checkbox-container span,\r\n  .checkbox-container input {\r\n    width: auto;\r\n  }\r\n  .checkbox-container span {\r\n    margin-left: 6px;\r\n    font-weight: bold;\r\n  }\r\n  .submit-btn {\r\n    background-color: #222;\r\n    color:#fcba03;\r\n    font-weight: bold;\r\n    border: 2px solid #222;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin: 0 auto;\r\n    cursor: pointer;\r\n    transition: .5s;\r\n  }\r\n  .submit-btn:hover {\r\n    background-color: transparent;\r\n    color: #222;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}