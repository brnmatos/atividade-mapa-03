{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Programação:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Dashboard = _resolveComponent(\"Dashboard\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_Dashboard)])]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAgB;gCACzBC,oBAAqB,YAAjB,cAAY;;;;uBAFpBC,oBAKM,cAJJD,oBAGM,OAHNE,UAGM,GAFJC,UAAqB,EACrBC,aAAaC","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_Dashboard"],"sourceRoot":"","sources":["C:\\app\\137-tech\\radio-web\\radio-web\\frontend\\src\\views\\Programacao.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main-container\">\r\n      <h1>Programação:</h1>\r\n      <Dashboard />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Dashboard from '../components/Dashboard.vue';\r\nimport { connect, subscribe, disconnect } from '@/utils/websocket';\r\nexport default {\r\n  name: 'programacao',\r\n  components: {\r\n    Dashboard\r\n  },\r\n\r\n  data(){\r\n\r\n\r\n  },\r\n  mounted(){\r\n    this.conectarCanalNotificacao();\r\n  },\r\n  beforeDestroy(){\r\n    disconnect();\r\n  },\r\n  \r\n  methods:{\r\n\r\n    async conectarCanalNotificacao(){\r\n      try {\r\n        await connect();        \r\n      } catch (error) {\r\n        this.$notify.error({\r\n          message: 'Não foi possível se conectar na api!'\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n              subscribe('testeUsuario/websocket/teste', (response) => {\r\n              const testeRetorno = JSON.parse(response);\r\n              console.log('retorno é:', testeRetorno);\r\n          });\r\n      } catch (error) {\r\n        this.$notify.error({\r\n            message: 'Não foi possível subscribe no ws!'\r\n        });\r\n        disconnect();\r\n      }\r\n    },\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}