{"ast":null,"code":"import Message from './Message.vue';\nexport default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      burgers: null,\n      burger_id: null,\n      status: [],\n      msg: null\n    };\n  },\n  components: {\n    Message\n  },\n  methods: {\n    async getPedidos() {\n      const req = await fetch(\"http://localhost:3000/burgers\");\n      const data = await req.json();\n      this.burgers = data;\n\n      // resgatar os status\n      this.getStatus();\n    },\n    async getStatus() {\n      const req = await fetch(\"http://localhost:3000/status\");\n      const data = await req.json();\n      this.status = data;\n    },\n    async deleteBurger(id) {\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"DELETE\"\n      });\n      const res = await req.json();\n\n      // colocar uma msg de sistema\n      this.msg = `Pedido removido com sucesso!`;\n\n      // limpar msg\n      setTimeout(() => this.msg = \"\", 5000);\n      this.getPedidos();\n    },\n    async updateBurger(event, id) {\n      const option = event.target.value;\n      const dataJson = JSON.stringify({\n        status: option\n      });\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n\n      // colocar uma msg de sistema\n      this.msg = `O pedido Nº ${res.id} foi atualizado`;\n\n      // limpar msg\n      setTimeout(() => this.msg = \"\", 5000);\n      console.log(res);\n    }\n  },\n  mounted() {\n    this.getPedidos();\n  }\n};","map":{"version":3,"mappings":"AAuCA,OAAOA,OAAM,MAAO,eAAe;AAEnC,eAAe;EACXC,IAAI,EAAE,WAAW;EAEjBC,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,EAAE;MACVC,GAAG,EAAE;IACT,CAAC;EAEL,CAAC;EAEDC,UAAU,EAAE;IACRP;EACJ,CAAC;EAEDQ,OAAO,EAAE;IACL,MAAMC,UAAU,GAAG;MAGf,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAExD,MAAMT,IAAG,GAAI,MAAMQ,GAAG,CAACE,IAAI,EAAE;MAE7B,IAAI,CAACT,OAAM,GAAID,IAAI;;MAGnB;MACA,IAAI,CAACW,SAAS,EAAE;IACpB,CAAC;IAED,MAAMA,SAAS,GAAG;MACd,MAAMH,GAAE,GAAI,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAEvD,MAAMT,IAAG,GAAI,MAAMQ,GAAG,CAACE,IAAI,EAAE;MAE7B,IAAI,CAACP,MAAK,GAAIH,IAAI;IAEtB,CAAC;IACD,MAAMY,YAAY,CAACC,EAAE,EAAE;MAEnB,MAAML,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCI,EAAG,EAAC,EAAE;QAC/DC,MAAM,EAAE;MACR,CAAC,CAAC;MAEF,MAAMC,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,EAAE;;MAI5B;MACA,IAAI,CAACN,GAAE,GAAK,8BAA6B;;MAEzC;MACAY,UAAU,CAAC,MAAM,IAAI,CAACZ,GAAE,GAAI,EAAE,EAAC,IAAI,CAAC;MAEpC,IAAI,CAACG,UAAU,EAAE;IAGrB,CAAC;IACD,MAAMU,YAAY,CAACC,KAAK,EAACL,EAAE,EAAE;MAEzB,MAAMM,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK;MAEjC,MAAMC,QAAO,GAAGC,IAAI,CAACC,SAAS,CAAC;QAACrB,MAAM,EAACgB;MAAM,CAAC,CAAC;MAE/C,MAAMX,GAAE,GAAI,MAAMC,KAAI,CAAI,iCAAgCI,EAAG,EAAC,EAAE;QAC5DC,MAAM,EAAE,OAAO;QACfW,OAAO,EAAE;UAAE,cAAa,EAAI;QAAkB,CAAC;QAC/CC,IAAI,EAAEJ;MACV,CAAC;MAEG,MAAMP,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,EAAE;;MAE5B;MACA,IAAI,CAACN,GAAE,GAAK,eAAeW,GAAG,CAACF,EAAE,iBAAiB;;MAElD;MACAG,UAAU,CAAC,MAAM,IAAI,CAACZ,GAAE,GAAI,EAAE,EAAC,IAAI,CAAC;MAEpCuB,OAAO,CAACC,GAAG,CAACb,GAAG,CAAC;IACxB;EAEJ,CAAC;EACDc,OAAO,GAAG;IACN,IAAI,CAACtB,UAAU,EAAE;EACrB;AACJ,CAAC","names":["Message","name","data","burgers","burger_id","status","msg","components","methods","getPedidos","req","fetch","json","getStatus","deleteBurger","id","method","res","setTimeout","updateBurger","event","option","target","value","dataJson","JSON","stringify","headers","body","console","log","mounted"],"sourceRoot":"","sources":["C:\\app\\projects\\Fullstack\\treinamento_vue_3\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n    <div id=\"burger-table\" v-if=\"burgers\">\r\n        <div>\r\n            <Message :msg=\"msg\" v-show=\"msg\"/>\r\n        </div>\r\n        <div id=\"burger-table-heading\">\r\n                <div class=\"order-id\">#:</div>\r\n                <div>Pão:</div>\r\n                <div>Carne:</div>\r\n                <div>Opcionais:</div>\r\n                <div>Ações:</div>\r\n        </div>\r\n    </div>   \r\n    <div id=\"burger-table-rows\"></div>    \r\n        <div class=\"burger-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\r\n        \r\n            <div class=\"order-number\"> {{burger.id}} </div>\r\n            <div>{{ burger.nome }}</div>\r\n            <div>{{ burger.pao }}</div>\r\n            <div>{{ burger.carne }}</div>\r\n            <div>\r\n                <ul ul v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\r\n                    <li>{{ opcional }}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div> \r\n                <select name=\"status\" class=\"status\" @change=\"updateBurger($event,burger.id)\">\r\n                    <option value=\"\">Selecione</option>\r\n                    <option v-for=\"s in status\" :key=\"s.id\" :value=\"s.tipo\" :selected=\"burger.status == s.tipo\">\r\n                        {{ s.tipo }}\r\n                    </option>\r\n                </select>\r\n                <button class=\"delete-btn\" @click=\"deleteBurger(burger.id)\">Cancelar</button>\r\n            </div>\r\n        </div>\r\n\r\n</template>\r\n<script>\r\nimport Message from './Message.vue';\r\n\r\nexport default {\r\n    name: \"Dashboard\",\r\n\r\n    data() {\r\n        return {\r\n            burgers: null,\r\n            burger_id: null,\r\n            status: [],\r\n            msg: null\r\n        };\r\n\r\n    },\r\n    \r\n    components: {\r\n        Message\r\n    },\r\n\r\n    methods: {\r\n        async getPedidos() {\r\n            \r\n            \r\n            const req = await fetch(\"http://localhost:3000/burgers\");\r\n\r\n            const data = await req.json();\r\n\r\n            this.burgers = data;\r\n            \r\n\r\n            // resgatar os status\r\n            this.getStatus();\r\n        },\r\n        \r\n        async getStatus() {\r\n            const req = await fetch(\"http://localhost:3000/status\");\r\n            \r\n            const data = await req.json();\r\n\r\n            this.status = data;  \r\n        \r\n        },\r\n        async deleteBurger(id) {\r\n\r\n            const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n            method: \"DELETE\"\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            \r\n\r\n            // colocar uma msg de sistema\r\n            this.msg = `Pedido removido com sucesso!`;\r\n\r\n            // limpar msg\r\n            setTimeout(() => this.msg = \"\",5000);\r\n\r\n            this.getPedidos();\r\n\r\n\r\n        },\r\n        async updateBurger(event,id) {\r\n\r\n            const option = event.target.value;\r\n\r\n            const dataJson =JSON.stringify({status:option});\r\n\r\n            const req = await fetch (`http://localhost:3000/burgers/${id}`, {\r\n                method: \"PATCH\",\r\n                headers: { \"Content-Type\" : \"application/json\"},\r\n                body: dataJson\r\n            })\r\n\r\n                const res = await req.json();\r\n\r\n                // colocar uma msg de sistema\r\n                this.msg = `O pedido Nº ${ res.id} foi atualizado`;\r\n\r\n                // limpar msg\r\n                setTimeout(() => this.msg = \"\",5000);                                                                                                                                                                                                    \r\n                \r\n                console.log(res);\r\n        }\r\n    \r\n    },\r\n    mounted() {\r\n        this.getPedidos();\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    #burger-table {\r\n        max-width: 1200px;  \r\n        margin: 0 auto; \r\n    }\r\n    #burger-table-heading,\r\n    #burger-table-rows,\r\n    .burger-table-row {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n    #burger-table-heading {\r\n        font-weight: bold;\r\n        padding: 12px;\r\n        border-bottom: 3px solid #333;\r\n    }\r\n\r\n    #burger-table-heading div,\r\n    .burger-table-row div {\r\n        width:19%;\r\n    }\r\n    .burger-table-row {\r\n        width: 100%;\r\n        padding: 12px;\r\n    border-bottom: 1px solid #CCC;\r\n        }\r\n\r\n        #burger-table-heading .order-id,\r\n        .burger-table-row .order-number {\r\n            width: 5%;\r\n        }\r\n        select {\r\n            padding: 12px 6px;\r\n            margin-right: 12px;\r\n        }\r\n        .delete-btn {\r\n            background-color: #222;\r\n            color: #fcba03;\r\n            font-weight: bold;\r\n            border: 2px solid #222;\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            margin: 0 auto;\r\n            cursor: pointer;\r\n            transition: .5s;\r\n        }\r\n        .delete-btn:hover {\r\n            background-color: transparent;\r\n            color:#222\r\n        }   \r\n    \r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}