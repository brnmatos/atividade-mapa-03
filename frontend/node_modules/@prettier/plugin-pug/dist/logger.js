"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = exports.createLogger = exports.Logger = exports.LogLevel = void 0;
var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "debug";
    LogLevel["LOG"] = "log";
    LogLevel["INFO"] = "info";
    LogLevel["WARN"] = "warn";
    LogLevel["ERROR"] = "error";
    LogLevel["OFF"] = "off";
})(LogLevel || (exports.LogLevel = LogLevel = {}));
class Logger {
    logger;
    level;
    constructor(logger = console, level = LogLevel.INFO) {
        this.logger = logger;
        this.level = level;
    }
    static isSupportedLogLevel(value) {
        return (typeof value === 'string' &&
            (value === 'debug' ||
                value === 'log' ||
                value === 'info' ||
                value === 'warn' ||
                value === 'error' ||
                value === 'off'));
    }
    setLogLevel(level) {
        this.level = level;
    }
    isDebugEnabled() {
        return this.level <= LogLevel.DEBUG;
    }
    debug(message, ...optionalParams) {
        this.message(LogLevel.DEBUG, message, ...optionalParams);
    }
    log(message, ...optionalParams) {
        this.message(LogLevel.LOG, message, ...optionalParams);
    }
    info(message, ...optionalParams) {
        this.message(LogLevel.INFO, message, ...optionalParams);
    }
    warn(message, ...optionalParams) {
        this.message(LogLevel.WARN, message, ...optionalParams);
    }
    error(message, ...optionalParams) {
        this.message(LogLevel.ERROR, message, ...optionalParams);
    }
    message(level, message, ...optionalParams) {
        if (this.level !== LogLevel.OFF && this.level <= level) {
            if (level !== LogLevel.OFF) {
                this.logger[level](message, ...optionalParams);
            }
        }
    }
}
exports.Logger = Logger;
function createLogger(logger = console) {
    return new Logger(logger);
}
exports.createLogger = createLogger;
exports.logger = createLogger(console);
if (process.env.NODE_ENV === 'test') {
    exports.logger.setLogLevel(LogLevel.DEBUG);
}
let logLevel = process.env.PRETTIER_PLUGIN_PUG_LOG_LEVEL;
if (logLevel) {
    logLevel = logLevel.toLowerCase();
    if (Logger.isSupportedLogLevel(logLevel)) {
        exports.logger.setLogLevel(logLevel);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxJQUFZLFFBT1g7QUFQRCxXQUFZLFFBQVE7SUFDbEIsMkJBQWUsQ0FBQTtJQUNmLHVCQUFXLENBQUE7SUFDWCx5QkFBYSxDQUFBO0lBQ2IseUJBQWEsQ0FBQTtJQUNiLDJCQUFlLENBQUE7SUFDZix1QkFBVyxDQUFBO0FBQ2IsQ0FBQyxFQVBXLFFBQVEsd0JBQVIsUUFBUSxRQU9uQjtBQVNELE1BQWEsTUFBTTtJQVFFO0lBQ1Q7SUFGVixZQUNtQixTQUFrQixPQUFPLEVBQ2xDLFFBQWtCLFFBQVEsQ0FBQyxJQUFJO1FBRHRCLFdBQU0sR0FBTixNQUFNLENBQW1CO1FBQ2xDLFVBQUssR0FBTCxLQUFLLENBQTBCO0lBQ3RDLENBQUM7SUFRRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsS0FBVTtRQUMxQyxPQUFPLENBQ0wsT0FBTyxLQUFLLEtBQUssUUFBUTtZQUN6QixDQUFDLEtBQUssS0FBSyxPQUFPO2dCQUNoQixLQUFLLEtBQUssS0FBSztnQkFDZixLQUFLLEtBQUssTUFBTTtnQkFDaEIsS0FBSyxLQUFLLE1BQU07Z0JBQ2hCLEtBQUssS0FBSyxPQUFPO2dCQUNqQixLQUFLLEtBQUssS0FBSyxDQUFDLENBQ25CLENBQUM7SUFDSixDQUFDO0lBT00sV0FBVyxDQUFDLEtBQWU7UUFDaEMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQU9NLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsS0FBSyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUM7SUFDdEMsQ0FBQztJQVFNLEtBQUssQ0FBQyxPQUFpQixFQUFFLEdBQUcsY0FBcUI7UUFDdEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFRTSxHQUFHLENBQUMsT0FBaUIsRUFBRSxHQUFHLGNBQXFCO1FBQ3BELElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBUU0sSUFBSSxDQUFDLE9BQWlCLEVBQUUsR0FBRyxjQUFxQjtRQUNyRCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQVFNLElBQUksQ0FBQyxPQUFpQixFQUFFLEdBQUcsY0FBcUI7UUFDckQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFRTSxLQUFLLENBQUMsT0FBaUIsRUFBRSxHQUFHLGNBQXFCO1FBQ3RELElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRU8sT0FBTyxDQUNiLEtBQWUsRUFDZixPQUFhLEVBQ2IsR0FBRyxjQUFxQjtRQUV4QixJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssUUFBUSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLEtBQUssRUFBRTtZQUN0RCxJQUFJLEtBQUssS0FBSyxRQUFRLENBQUMsR0FBRyxFQUFFO2dCQUMxQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO2FBQ2hEO1NBQ0Y7SUFDSCxDQUFDO0NBQ0Y7QUE3R0Qsd0JBNkdDO0FBUUQsU0FBZ0IsWUFBWSxDQUFDLFNBQWtCLE9BQU87SUFDcEQsT0FBTyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBRkQsb0NBRUM7QUFLWSxRQUFBLE1BQU0sR0FBVyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7QUFHcEQsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxNQUFNLEVBQUU7SUFDbkMsY0FBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7Q0FDcEM7QUFFRCxJQUFJLFFBQVEsR0FBdUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQztBQUM3RSxJQUFJLFFBQVEsRUFBRTtJQUNaLFFBQVEsR0FBRyxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsSUFBSSxNQUFNLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDeEMsY0FBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUM5QjtDQUNGIn0=